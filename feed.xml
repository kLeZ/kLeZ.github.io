<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://klez.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://klez.me/" rel="alternate" type="text/html" /><updated>2020-09-14T20:58:11+02:00</updated><id>https://klez.me/</id><title type="html">Alessandro ‘kLeZ’ Accardo personal website</title><subtitle>This is the personal website of an Italian developer once called 'kLeZ'.</subtitle><entry><title type="html">Using The Eisenhower Matrix In Emacs Org-Mode</title><link href="https://klez.me/2019/10/22/using-the-eisenhower-matrix-in-emacs-org-mode/" rel="alternate" type="text/html" title="Using The Eisenhower Matrix In Emacs Org-Mode" /><published>2019-10-22T16:18:35+02:00</published><updated>2019-10-22T16:18:35+02:00</updated><id>https://klez.me/2019/10/22/using-the-eisenhower-matrix-in-emacs-org-mode</id><content type="html" xml:base="https://klez.me/2019/10/22/using-the-eisenhower-matrix-in-emacs-org-mode/">&lt;p&gt;Riporto integralmente l’articolo di Tom Purl che parla dell’integrazione della matrice di Eisenhower in Emacs Org-Mode.&lt;/p&gt;
        &lt;p&gt;Purtroppo Tom ha rimosso l’articolo dal suo sito ma sono riuscito comunque a trovarlo tramite la &lt;a href=&quot;https://web.archive.org/web/&quot;&gt;Wayback Machine&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Di seguito (in inglese) l’articolo integrale. Forse (&lt;strong&gt;forse&lt;/strong&gt;) porterò una traduzione di questo articolo nel blog, a imperitura memoria, soprattutto per chi non mastica granché l’inglese.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;p&gt;I just finished reading the &lt;a href=&quot;http://waitbutwhy.com/2015/03/procrastination-matrix.html&quot;&gt;The Procrastination Matrix&lt;/a&gt; article on the &lt;a href=&quot;http://waitbutwhy.com/&quot;&gt;Wait But Why&lt;/a&gt; blog and it really spoke to me. I’m a big fan of using &lt;a href=&quot;http://orgmode.org/&quot;&gt;Org-Mode&lt;/a&gt; in Emacs to organize all of my tasks, and I wondered if I could make both of these systems work together. Naturally, Org-Mode makes it really easy, and here’s how I did it.&lt;/p&gt;
        &lt;h2 id=&quot;easy-tagging&quot;&gt;Easy Tagging&lt;/h2&gt;
        &lt;p&gt;First, I need to be able to categorize my TODO’s as being urgent, important, or both. The easiest way to do this in Org-Mode is to use tags that looks something like this:&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;** TODO Pay bills                                                    :urgent:
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;p&gt;You can easily add tags using the &lt;code class=&quot;highlighter-rouge&quot;&gt;C-c C-c&lt;/code&gt; command, but I like to make things even easier by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;org-tag-alist&lt;/code&gt; variable:&lt;/p&gt;
        &lt;div class=&quot;language-elisp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;org-tag-alist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;important&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;?i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;urgent&quot;&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;?u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;p&gt;Now when I tag a TODO item, I simply need to type &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt; to tag it as important and/or urgent.&lt;/p&gt;
        &lt;h2 id=&quot;canned-searches&quot;&gt;Canned Searches&lt;/h2&gt;
        &lt;p&gt;Now that my TODO’s are tagged I would like to be able to look at all 4 quadrants quickly and easily. I can do this in Org-Mode by setting the value of the &lt;code class=&quot;highlighter-rouge&quot;&gt;org-agenda-custom-commands&lt;/code&gt; variable. Here’s what I have:&lt;/p&gt;
        &lt;div class=&quot;language-elisp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;org-agenda-custom-commands&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Q1&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags-todo&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;+important+urgent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Q2&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags-todo&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;+important-urgent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Q3&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags-todo&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-important+urgent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;4&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Q4&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tags-todo&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-important-urgent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;p&gt;Q1 stands for “quadrant 1” and contains all TODO’s that are tagged as both important and urgent. Q2 contains all of the TODO’s that are tagged as important but not urgent. And the rest should be pretty self explanatory.&lt;/p&gt;
        &lt;p&gt;Now when I press &lt;code class=&quot;highlighter-rouge&quot;&gt;C-c a&lt;/code&gt; I see my usual agenda search dialog with the following lines at the bottom:&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1    Q1        : +important+urgent
        2    Q2        : +important-urgent
        3    Q3        : -important+urgent
        4    Q4        : -important-urgent
        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;p&gt;I can then see all of the tasks for a given quadrant by pressing the corresponding number.&lt;/p&gt;
        &lt;h2 id=&quot;thats-it&quot;&gt;That’s It!&lt;/h2&gt;
        &lt;p&gt;Once again Org-Mode has proven itself to be very easy to customize. It literally does everything for me but complete my tasks and show the &lt;a href=&quot;http://waitbutwhy.com/2013/10/why-procrastinators-procrastinate.html&quot;&gt;Instant Gratification Monkey&lt;/a&gt; who’s boss.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Riporto integralmente l’articolo di Tom Purl che parla dell’integrazione della matrice di Eisenhower in Emacs Org-Mode. Purtroppo Tom ha rimosso l’articolo dal suo sito ma sono riuscito comunque a trovarlo tramite la Wayback Machine. Di seguito (in inglese) l’articolo integrale. Forse (forse) porterò una traduzione di questo articolo nel blog, a imperitura memoria, soprattutto per chi non mastica granché l’inglese.</summary></entry><entry><title type="html">PyTorch, la promessa del deep learning?</title><link href="https://klez.me/2019/10/17/pytorch-la-promessa-del-deep-learning/" rel="alternate" type="text/html" title="PyTorch, la promessa del deep learning?" /><published>2019-10-17T10:42:30+02:00</published><updated>2019-10-17T10:42:30+02:00</updated><id>https://klez.me/2019/10/17/pytorch-la-promessa-del-deep-learning</id><content type="html" xml:base="https://klez.me/2019/10/17/pytorch-la-promessa-del-deep-learning/">&lt;p&gt;Recentemente mi sono appassionato al &lt;em&gt;Machine Learning&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Per chi non sapesse cos’è, il &lt;em&gt;machine learning&lt;/em&gt; è una tecnologia (un insieme di tecnologie, in realtà) che permette calcoli piuttosto complessi in modo relativamente semplice e, cosa estremamente più importante, che può &lt;strong&gt;imparare&lt;/strong&gt; dai dati che gli vengono somministrati.&lt;/p&gt;
        &lt;p&gt;Questo permette di effettuare calcoli complessi sempre più precisi fino a un tasso di fallimento che rasenta lo zero, un fattore necessario per mansioni complicate e critiche come il riconoscimento delle semantico immagini e l’elaborazione statistica.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;lo-standard-de-facto&quot;&gt;Lo standard &lt;em&gt;de facto&lt;/em&gt;&lt;/h2&gt;
        &lt;p&gt;Nel settore c’è già una specie di standard, una tecnologia che è consuetudine imparare a usare se si vuole sviluppare questo tipo di software. Parlo di una libreria sviluppata da &lt;strong&gt;Google&lt;/strong&gt;, che si chiama &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;TensorFlow è una ottima libreria, potente e flessibile che permette di sviluppare delle ottime reti neurali. Ma, c’è un ma.&lt;/p&gt;
        &lt;h2 id=&quot;la-competizione-si-fa-dura&quot;&gt;La competizione si fa dura&lt;/h2&gt;
        &lt;p&gt;Si compete sempre molto nella Silicon Valley, e le grandi aziende sono maestre della competizione tecnologica.&lt;/p&gt;
        &lt;p&gt;Facebook, che tecnologicamente non è da meno di Google in quanto a ingegneri, ha deciso di buttarsi nella mischia con qualcosa di simile al quasi monopolista TensorFlow. La loro creazione si chiama &lt;a href=&quot;https://pytorch.org/&quot;&gt;PyTorch&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;PyTorch si presenta più come un &lt;em&gt;framework&lt;/em&gt;, meno come una libreria, a differenza di TesorFlow. Questo significa che è più comodo e relativamente più semplice da utilizzare, perdendo però un minimo di flessibilità.&lt;/p&gt;
        &lt;h2 id=&quot;il-guadagno-della-dinamicità&quot;&gt;Il guadagno della dinamicità&lt;/h2&gt;
        &lt;p&gt;Questa flessibilità apparentemente persa è guadagnata nuovamente e con gli interessi grazie alla possibilità di PyTorch di gestire i nodi del grafo in maniera dinamica, utilizzando un metodo chiamato &lt;em&gt;auto-differenziazione in modalità inversa&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Questo guadagno è ancora più utile quando si tratta di effettuare il debugging della rete neurale, reso semplice e comodo dai soliti strumenti utilizzati per gli altri programmi python.&lt;/p&gt;
        &lt;p&gt;Un ulteriore guadagno portato da PyTorch è la parallelizzazione dei dati praticamente automatica, che permette di utilizzare GPU multiple con praticamente nessuno sforzo.&lt;/p&gt;
        &lt;h2 id=&quot;il-miglior-python-a-oggetti-che-un-data-scientist-possa-desiderare&quot;&gt;Il miglior python a oggetti che un data scientist possa desiderare&lt;/h2&gt;
        &lt;p&gt;PyTorch somiglia molto a un qualsiasi framework python ben strutturato, e soprattutto è organizzato ad oggetti.&lt;/p&gt;
        &lt;p&gt;In sostanza, PyTorch promette piuttosto bene essendo molto integrato sia con la filosofia del linguaggio che con i paradigmi funzionale e a oggetti.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Recentemente mi sono appassionato al Machine Learning. Per chi non sapesse cos’è, il machine learning è una tecnologia (un insieme di tecnologie, in realtà) che permette calcoli piuttosto complessi in modo relativamente semplice e, cosa estremamente più importante, che può imparare dai dati che gli vengono somministrati. Questo permette di effettuare calcoli complessi sempre più precisi fino a un tasso di fallimento che rasenta lo zero, un fattore necessario per mansioni complicate e critiche come il riconoscimento delle semantico immagini e l’elaborazione statistica.</summary></entry><entry><title type="html">La situazione sul TDD</title><link href="https://klez.me/2019/09/13/la-situazione-sul-tdd/" rel="alternate" type="text/html" title="La situazione sul TDD" /><published>2019-09-13T19:00:57+02:00</published><updated>2019-09-13T19:00:57+02:00</updated><id>https://klez.me/2019/09/13/la-situazione-sul-tdd</id><content type="html" xml:base="https://klez.me/2019/09/13/la-situazione-sul-tdd/">&lt;p&gt;Il TDD è una di quelle metodologie che più spesso viene bistrattata qui in Italia. Spesso si sente definire questo approccio come &lt;em&gt;troppo costoso&lt;/em&gt; o peggio come &lt;em&gt;fallimentare&lt;/em&gt;.&lt;br /&gt;
        Molto spesso la “colpa” va al budget, sempre troppo risicato quantunque esso sia, ma qui si sa che la coperta viene commissionata su misura per un watusso e poi arrotolata fino a non coprirci neanche un pigmeo. E quello deve bastarti, altra non ne srotolano.&lt;/p&gt;
        &lt;p&gt;Al di là delle facili critiche e delle superficiali battute tragicomiche, il fatto è che c’è molto ancora da fare per convincere i più biechi antagonisti di questa tecnica che vale la pena &lt;em&gt;iniziare&lt;/em&gt; a fare dei test un componente necessario di ogni progetto.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;cosa-è-il-tdd&quot;&gt;Cosa è il TDD&lt;/h2&gt;
        &lt;p&gt;Quindi cos’è il TDD? TDD è un acronimo che significa &lt;em&gt;Test Driven Development&lt;/em&gt;; è una metodologia che ci consente di guidare lo sviluppo tramite i test, che sembra complicato ma non lo è.&lt;/p&gt;
        &lt;p&gt;Guidare lo sviluppo tramite i test significa essenzialmente che i test vanno &lt;strong&gt;progettati bene&lt;/strong&gt;, perché dovranno coprire ad alto livello tutti i casi d’uso richiesti dal committente del software.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Un test alla fine non è altro che la spiegazione con verifica passo passo di una funzione del software usando il software stesso.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Esistono diversi tipi di test che si usano per diversi scopi e in diversi contesti, e servono per allargare via via il cono di visibilità sul sistema. Vediamoli.&lt;/p&gt;
        &lt;h3 id=&quot;unit-test&quot;&gt;Unit test&lt;/h3&gt;
        &lt;p&gt;I test unitari o &lt;em&gt;unit test&lt;/em&gt; sono i componenti principali di una qualsiasi &lt;em&gt;suite&lt;/em&gt; di test. Con uno &lt;em&gt;unit test&lt;/em&gt; andiamo a verificare il funzionamento di singole unità di codice, singoli metodi o singole funzioni, che dovrebbero fare una sola cosa e dovrebbero farla bene. Questo rientra nel &lt;a href=&quot;/2019/03/28/spaghetti-code-its-that-bad/&quot;&gt;Clean Code&lt;/a&gt;, l’abbiamo già trattato.&lt;/p&gt;
        &lt;h3 id=&quot;integration-test&quot;&gt;Integration test&lt;/h3&gt;
        &lt;p&gt;A dispetto di quanto si pensa, non servono per verificare l’integrazione del sistema con altri sistemi, bensì servono per verificare che ogni componente del sistema sia correttamente integrato con gli altri. Inoltre gli &lt;em&gt;integration test&lt;/em&gt; si usano anche per verificare che il sistema risponda correttamente ai requisiti funzionali (cioè che faccia ciò che è richiesto dal committente).&lt;/p&gt;
        &lt;h3 id=&quot;validation-test&quot;&gt;Validation test&lt;/h3&gt;
        &lt;p&gt;I test di validazione (solitamente manuali) sono test che validano il comportamento generale del sistema; sono chiamati anche test &lt;em&gt;end-to-end&lt;/em&gt; o con l’acronimo &lt;strong&gt;E2E&lt;/strong&gt;. In alcuni casi è possibile che anche questi test trovino spazio nella &lt;em&gt;suite&lt;/em&gt; dei test del software da eseguire automaticamente, ma non è sempre così.&lt;/p&gt;
        &lt;h2 id=&quot;il-solito-uncle-bob-a-illuminarmi-la-strada&quot;&gt;Il solito Uncle Bob a illuminarmi la strada&lt;/h2&gt;
        &lt;p&gt;Quando morirà, spero il più tardi possibile, probabilmente mi sentirò smarrito e piangerò, come fosse stato mio padre. Beh, dal punto di vista puramente tecnico mi ha insegnato e mi insegna ancora tutto quello che sa, esattamente come farebbe un padre. Oh, non c’è un rapporto diretto, quello che insegna a me lo insegna a tutti tramite &lt;a href=&quot;https://twitter.com/unclebobmartin&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://blog.cleancoder.com/&quot;&gt;il suo blog&lt;/a&gt; e i suoi libri.&lt;/p&gt;
        &lt;p&gt;Lo Zio ha pubblicato, ormai molte lune or sono&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2016/03/19/GivingUpOnTDD.html&quot;&gt;questo interessante articolo&lt;/a&gt; in cui analizza &lt;a href=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;un altro articolo&lt;/a&gt;, quello di nientemeno che &lt;a href=&quot;https://en.wikipedia.org/wiki/Ian_Sommerville_(academic)&quot;&gt;Ian Sommerville&lt;/a&gt; uno dei più stimati professori di Ingegneria del Software, non uno qualunque, ecco.&lt;/p&gt;
        &lt;p&gt;L’articolo analizza punto per punto le critiche di Sommerville bollandolo alla fine come neofita, a ragione tra l’altro.&lt;/p&gt;
        &lt;h2 id=&quot;sommervilles-issue&quot;&gt;Sommerville’s issue&lt;/h2&gt;
        &lt;p&gt;I problemi di Sommerville sono di certo una spiccata lentezza nell’apprendere la metodologia unita a una progettazione probabilmente ricca di compromessi.&lt;br /&gt;
        Capita spesso di scendere a dei compromessi che imbruttiscono il codice, ma non dovremmo lasciarci tentare da queste scorciatoie perché il prezzo è sempre la qualità del codice, l’architettura e di conseguenza la difficoltà nello svolgere task semplici come scrivere un test o effettuare una modifica al comportamento.&lt;/p&gt;
        &lt;p&gt;La prima critica mossa verso il TDD riguarda il primo dei problemi che incontrano i neofiti nell’approccio alla disciplina.&lt;/p&gt;
        &lt;h3 id=&quot;il-problema-dei-test-fragili&quot;&gt;Il problema dei Test fragili&lt;/h3&gt;
        &lt;p&gt;Un po’ sto traducendo da Uncle Bob, ma va bene lo stesso (almeno per me).&lt;/p&gt;
        &lt;p&gt;Sommerville asserisce che il TDD rende conservativi riguardo al software, cioè rende chi adotta questo approccio molto avverso all’applicazione di cambiamenti nel software.&lt;/p&gt;
        &lt;p&gt;La risposta dello Zio ovviamente riguarda l’architettura; un software su cui si ha avversione ad applicare modifiche è un software mal progettato. E io sono assolutamente d’accordo. Aggiungo qualcosa di mio riprendendo esattamente la frase di Sommerville.&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;
        &lt;p&gt;Because you want to ensure that you always pass the majority of tests,
        you tend to think about this when you change and extend the program.
        You therefore are more reluctant to make large-scale changes that will lead to the failure of lots of tests.
        Psychologically, you become conservative to avoid breaking lots of tests.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Ian Sommerville&quot;&gt;Ian Sommerville&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Sostanzialmente, sembrerebbe che Sommerville abbia sperimentato quello che ci porta tutti a pensare di abbandonare il TDD, inizialmente.&lt;/p&gt;
        &lt;p&gt;Siccome, in quanto programmatori, siamo pigri, meno “fatica” facciamo per ottenere il risultato e più siamo contenti.&lt;/p&gt;
        &lt;p&gt;Dato questo e dato che la nostra disciplina premia la pigrizia, impariamo ben presto a conservare il più possibile l’energia che abbiamo, tentando di percorrere strade anche non battute ma più brevi per risolvere il nostro problema.&lt;/p&gt;
        &lt;p&gt;E Ian questo lo sa molto bene, non a caso ha insegnato Ingegneria del Software per svariati anni.&lt;/p&gt;
        &lt;p&gt;La pigrizia è ciò che ci ha portato ad avere sistemi sempre più automatici, e la pigrizia ha portato Sommerville a “fallire” con il TDD.&lt;/p&gt;
        &lt;p&gt;Quello che dice in parte è corretto, psicologicamente &lt;strong&gt;sei portato a diventare&lt;/strong&gt; conservativo, ma solo perché scrivere test è un lavoro particolarmente noioso, che diventa relativamente meno noioso solo quando i test vengono usati per sviluppare la progettazione del sistema a partire dai casi d’uso. La parte incorretta è quella che dà pigramente e impunemente la colpa ai test e al TDD.&lt;/p&gt;
        &lt;p&gt;Non è per il TDD che trovi noioso scrivere i test, è perché sei pigro! Un’arma estremamente utile in certi casi, ma altrettanto affilata se usata contro di te. Ho dato del pigro a Sommerville, si.&lt;/p&gt;
        &lt;p&gt;Tanto più che Sommerville parla di &lt;em&gt;modifiche al sistema che rompono i test&lt;/em&gt;, cosa &lt;strong&gt;inammissibile&lt;/strong&gt; nel TDD, dove sono sempre i test i primi a essere modificati, mai l’opposto.&lt;/p&gt;
        &lt;p&gt;Su questo punto Sommerville sembra soffermarsi un po’ di più e stabilisce un nuovo concetto:&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;
        &lt;p&gt;The most serious problem for me is that it encourages a focus on
        sorting out detail to pass tests rather than looking at the
        program as a whole. I started programming at a time where
        computer time was limited and you had to spend time looking at
        and thinking about the program as a whole. I think this leads to
        more elegant and better structured programs. But, with TDD, you
        dive into the detail in different parts of the program and
        rarely step back and look at the big picture.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Ian Sommerville&quot;&gt;Ian Sommerville&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Qui in pratica sta dicendo che i test, su cui siamo concentrati, ci costringono a soffermarci sui dettagli senza pensare alla &lt;em&gt;big picture&lt;/em&gt;, anzi abbandonandola e dimenticandola.&lt;/p&gt;
        &lt;p&gt;Anche questo errore è relativo alla sua condizione di neofita dell’approccio, che lo porta a faticare molto per comprendere la nuova metodologia e i nuovi artefatti su cui sta lavorando perdendo di fatto la rotta sulla &lt;em&gt;big picture&lt;/em&gt; ma non a causa dei test, bensì a causa del suo essere un neofita.&lt;/p&gt;
        &lt;h3 id=&quot;il-problema-della-progettazione-testabile&quot;&gt;Il problema della progettazione testabile&lt;/h3&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;
        &lt;p&gt;It is easier to test some program designs than others.
        Sometimes, the best design is one that’s hard to test
        so you are more reluctant to take this approach because you
        know that you’ll spend a lot more time designing and writing
        tests (which I, for one, quite a boring thing to do)&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Ian Sommerville&quot;&gt;Ian Sommerville&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Qui Robert si arrabbia un po’ e ha ragione.&lt;/p&gt;
        &lt;p&gt;Io mi arrabbio un po’ di più (sapete, la giovane età :grin:) e ho ragione pure io.&lt;/p&gt;
        &lt;p&gt;&lt;strong&gt;Certo&lt;/strong&gt; che certi componenti sono più difficili da testare di altri, certo.&lt;br /&gt;
        Ogni dispositivo di IO è difficile da testare, no?&lt;/p&gt;
        &lt;p&gt;Immagina di dover testare le interazioni di un dispositivo VR, o di una fotocamera con sensore di profondità (videocamere 3D), quale sarebbe l’approccio per testarlo? Quali sarebbero i test specifici?&lt;/p&gt;
        &lt;p&gt;In quali condizioni saremmo soddisfatti dei test tanto da accettare il software?&lt;/p&gt;
        &lt;p&gt;Si tratta di domande molto complicate a cui rispondere, &lt;strong&gt;ovviamente&lt;/strong&gt;. La parola che sbaglia tantissimo è &lt;em&gt;designs&lt;/em&gt;, non sono &lt;em&gt;certe architetture&lt;/em&gt; ad essere più difficili di altre, sono i &lt;em&gt;design&lt;/em&gt; sbagliati che non sono testabili, per vari motivi.&lt;br /&gt;
        Sempre su questo punto aggiungo che &lt;strong&gt;di solito&lt;/strong&gt; la difficoltà di scrivere dei buoni test è data da una &lt;strong&gt;mancanza&lt;/strong&gt; di architettura piuttosto che da una cattiva architettura.&lt;br /&gt;
        Lo Zio Bob non si spinge fino all’affermare che ci sia una &lt;em&gt;totale mancanza di architettura&lt;/em&gt;, perché per lui non può esistere un software &lt;strong&gt;senza architettura&lt;/strong&gt;, per me si.&lt;br /&gt;
        Per me un software può essere stato scritto senza pensare a un’architettura, e si nota immediatamente, di conseguenza è molto semplice cadere nel baratro dell’impossibilità o della estrema difficoltà nell’implementazione dei test.&lt;/p&gt;
        &lt;p&gt;Questo è uno dei capisaldi di &lt;em&gt;Uncle Bob&lt;/em&gt; che però io mi sono sentito di mettere in dubbio. Per lui anche l’assenza di architettura è un’architettura, e dal punto di vista pratico ha ragione. Ma dal punto di vista della progettazione cosciente e consapevole, secondo me, determinati software non hanno un’architettura, dove per “non hanno un’architettura” intendo che chi ha sviluppato questi software non aveva in mente alcuna idea o convenzione o pattern ben preciso e ha scritto, secondo me, &lt;em&gt;di getto&lt;/em&gt;, cioè non consapevolmente.&lt;/p&gt;
        &lt;p&gt;Per chiudere su Sommerville, qui lui ha fatto un errore da neofita sul TDD: l’architettura di un progetto TDD va pensata, e i componenti devono essere progettati col chiaro scopo di testarli, ora o in futuro.&lt;/p&gt;
        &lt;p&gt;Cito &lt;em&gt;Uncle Bob&lt;/em&gt; direttamente, ma perché in questo caso mi ha davvero tolto le parole di bocca (o i caratteri da sotto alle dita).&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://blog.cleancoder.com/uncle-bob/2016/03/19/GivingUpOnTDD.html&quot;&gt;
        &lt;p&gt;Any design that is hard to test is crap. Pure crap.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Robert 'Uncle Bob' Martin&quot;&gt;Robert 'Uncle Bob' Martin&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;h3 id=&quot;il-problema-del-proiettile-magico&quot;&gt;Il problema del proiettile magico&lt;/h3&gt;
        &lt;p&gt;A questo punto, i pensieri di Sommerville sono talmente confusi sul TDD che non riesce più a distinguerne il confine.&lt;br /&gt;
        E inizia a pensare che il TDD debba essere una panacea che, solo per il fatto di essere stata applicata a un progetto, lo rende già migliore.&lt;br /&gt;
        E lo fa in queste poche righe in cui argomenta malissimo.&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;
        &lt;p&gt;In my experience, lots of program failures arise because the
        data being processed is not what’s expected by the programmer.
        It’s really hard to write ‘bad data’ tests that accurately
        reflect the real bad data you will have to process because you
        have to be a domain expert to understand the data. The ‘purist’
        approach here, of course, is that you design data validation
        checks so that you never have to process bad data. But the
        reality is that it’s often hard to specify what ‘correct data’
        means and sometimes you have to simply process the data you’ve
        got rather than the data that you’d like to have.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Ian Sommerville&quot;&gt;Ian Sommerville&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Ovviamente la sua lamentela sui dati è non solo realistica, ma reale. Ma non ha nulla a che fare col TDD.&lt;/p&gt;
        &lt;p&gt;In che modo una metodologia che ti aiuta a formalizzare dei test e verificare il funzionamento di un software potrebbe aiutarti o addirittura risolvere il problema che hai con i dati non validi?&lt;/p&gt;
        &lt;p&gt;In quale modo il TDD dovrebbe anticipare tutti i casi su cui non hai ancora ragionato?&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot;&gt;
        &lt;p&gt;Il TDD non sostituisce la progettazione;&lt;br /&gt;
        Il TDD non cura una pessima architettura;&lt;br /&gt;
        Il TDD non scriverà per te i tuoi requisiti e le tue validazioni
        sui dati e sugli algoritmi.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;kLeZ&quot;&gt;kLeZ&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;L’unico modo per gestire dati non validi in un software è anticipare in fase di progettazione quanti più casi non validi possibile, e il TDD al limite ci è di aiuto come &lt;em&gt;strumento&lt;/em&gt; per scrivere i test che verificano il comportamento del sistema in presenza di quei dati non validi che abbiamo teorizzato possano esistere.&lt;/p&gt;
        &lt;p&gt;Una cosa giusta però Sommerville l’ha scritta alla fine, che però non riguarda direttamente il TDD ma l’attitudine alla meccanizzazione delle operazioni che è tipica del programmatore pigro tipico.&lt;/p&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot; cite=&quot;https://iansommerville.com/systems-software-and-technology/2016/03/17/giving-up-on-test-first-development/&quot;&gt;
        &lt;p&gt;Think-first rather than test-first is the way to go.&lt;/p&gt;
        &lt;footer class=&quot;blockquote-footer&quot;&gt;&lt;cite title=&quot;Ian Sommerville&quot;&gt;Ian Sommerville&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Ha ragione, le scimmie prima o poi scriveranno anche dei buoni test, e allora a noi resterà solo la capacità di pensare per distinguerci da loro.&lt;/p&gt;
        &lt;div class=&quot;footnotes&quot;&gt;
        &lt;ol&gt;
        &lt;li id=&quot;fn:1&quot;&gt;
        &lt;p&gt;nel 2016, 3 anni e mezzo fa. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ol&gt;
        &lt;/div&gt;</content><author><name>kLeZ</name></author><summary type="html">Il TDD è una di quelle metodologie che più spesso viene bistrattata qui in Italia. Spesso si sente definire questo approccio come troppo costoso o peggio come fallimentare. Molto spesso la “colpa” va al budget, sempre troppo risicato quantunque esso sia, ma qui si sa che la coperta viene commissionata su misura per un watusso e poi arrotolata fino a non coprirci neanche un pigmeo. E quello deve bastarti, altra non ne srotolano. Al di là delle facili critiche e delle superficiali battute tragicomiche, il fatto è che c’è molto ancora da fare per convincere i più biechi antagonisti di questa tecnica che vale la pena iniziare a fare dei test un componente necessario di ogni progetto.</summary></entry><entry><title type="html">Transazioni distribuite saghe e code</title><link href="https://klez.me/2019/07/27/transazioni-distribuite-saghe-e-code/" rel="alternate" type="text/html" title="Transazioni distribuite saghe e code" /><published>2019-07-27T12:56:10+02:00</published><updated>2019-07-27T12:56:10+02:00</updated><id>https://klez.me/2019/07/27/transazioni-distribuite-saghe-e-code</id><content type="html" xml:base="https://klez.me/2019/07/27/transazioni-distribuite-saghe-e-code/">&lt;p&gt;Venerdì scorso ho tenuto un &lt;em&gt;talk&lt;/em&gt; interno alla mia azienda sulle basi (molto basi) del framework Spring.&lt;br /&gt;
        Mi sono concentrato poco sui dettagli, ho preferito puntare verso le potenzialità del framework e le &lt;em&gt;feature&lt;/em&gt; più innovative e interessanti, con un occhio buono al cloud, vera punta di diamante di tutta la tecnologia Spring.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;p&gt;Subito dopo il &lt;em&gt;talk&lt;/em&gt; un mio collega mi ha chiesto informazioni su una tematica particolare.&lt;/p&gt;
        &lt;p&gt;La sua domanda era relativa a delle tecniche, in particolare a librerie e/o pattern di Spring per poter gestire quella che io adesso ho imparato a chiamare “Transazione distribuita”. Non ne avevamo individuato il nome lì per lì.&lt;/p&gt;
        &lt;p&gt;Da architetto ho già risolto questa problematica in &lt;em&gt;Java&lt;/em&gt; tramite l’uso di &lt;em&gt;EJB transazionali&lt;/em&gt;, quindi con &lt;em&gt;JavaEE&lt;/em&gt;, ma mai mi ero posto il problema della transazionalità sui microservizi, liquidando il problema con un accorpamento nel servizio di tutto quello che ritengo atomico durante la scrittura di dati.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Ma questo pone dei problemi di flessibilità dell’architettura, nonché di scalabilità del sistema.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Ho intuitivamente risposto tramite una nascente metodologia che Spring implementa che è il &lt;em&gt;Reactive Programming&lt;/em&gt; (Spring implementa le librerie WebFlux).&lt;br /&gt;
        Questo paradigma di programmazione cambia completamente l’applicazione ma permette di rispondere a quelle esigenze.&lt;/p&gt;
        &lt;p&gt;Però per la sua problematica non gliel’ho consigliato perché altrimenti avrebbero dovuto riscrivere tutto il sistema.&lt;br /&gt;
        E noi consulenti non &lt;em&gt;possiamo&lt;/em&gt; riscrivere tutto il sistema.&lt;/p&gt;
        &lt;p&gt;Non contento personalmente della risposta ho studiato la problematica e ho compreso un pattern architetturale adatto ai sistemi distribuiti che ancora non conoscevo, il pattern &lt;a href=&quot;https://microservices.io/patterns/data/saga.html&quot;&gt;Saga&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Spring non implementa nulla direttamente, ma è possibile implementarlo sia con una coda (tipo &lt;em&gt;RabbitMQ&lt;/em&gt; o &lt;em&gt;ActiveMQ&lt;/em&gt;) sia con un framework chiamato &lt;em&gt;AxonIQ&lt;/em&gt;, che comprende anche un orchestratore della transazione distribuita (che probabilmente gestisce una coda di messaggi interna, quindi siamo sempre li).&lt;/p&gt;
        &lt;p&gt;Personalmente, penso che propenderei verso una soluzione più “casereccia” implementando una coda per caso d’uso, non ci ho ancora ragionato per bene.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Certo è, che ho da studiare qualcosina durante le vacanze :grin:.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Ringrazio il mio collega per la particolare domanda che mi ha spinto a studiare un argomento così interessante!&lt;/p&gt;</content><author><name>kLeZ</name></author><category term="spring" /><category term="eventi" /><summary type="html">Venerdì scorso ho tenuto un talk interno alla mia azienda sulle basi (molto basi) del framework Spring. Mi sono concentrato poco sui dettagli, ho preferito puntare verso le potenzialità del framework e le feature più innovative e interessanti, con un occhio buono al cloud, vera punta di diamante di tutta la tecnologia Spring.</summary></entry><entry><title type="html">Il revisionismo del ritardo cronico</title><link href="https://klez.me/2019/07/19/il-revisionismo-del-ritardo-cronico/" rel="alternate" type="text/html" title="Il revisionismo del ritardo cronico" /><published>2019-07-19T19:50:00+02:00</published><updated>2019-07-19T19:50:00+02:00</updated><id>https://klez.me/2019/07/19/il-revisionismo-del-ritardo-cronico</id><content type="html" xml:base="https://klez.me/2019/07/19/il-revisionismo-del-ritardo-cronico/">&lt;p&gt;Qualche sera fa ragionavo sul mio pregresso lavorativo, e nello specifico mi concentravo sull’ambiente di lavoro. Il &lt;em&gt;trigger&lt;/em&gt; è stato il treno che ho preso quella sera, &lt;strong&gt;Ostiense, 20.40&lt;/strong&gt;, che non è proprio il massimo della vita, questo posso dirlo, perché mi porta a casa alle 21.45 circa.&lt;/p&gt;
        &lt;p&gt;Alla fine dell’analisi preliminare ho stabilito che volevo concentrare il mio ragionamento sull’orario di lavoro (ancora una volta) tentando di sviscerare il perché mi riduco sempre a sopportare certi orari.&lt;/p&gt;
        &lt;p&gt;Mi sono trovato a dover confutare una ipotesi che portavo con me da lungo tempo.&lt;/p&gt;
        &lt;p&gt;Avevo già verificato sperimentalmente questa ipotesi anni fa, e sembrava reggere. Fino a ora.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;lipotesi&quot;&gt;L’ipotesi&lt;/h2&gt;
        &lt;p&gt;Avevo stabilito, sulla base di osservazioni, che il problema degli orari era sempre dovuto a questi pochi motivi:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;pianificazione errata delle attività&lt;/li&gt;
        &lt;li&gt;team leader e manager stacanovisti&lt;/li&gt;
        &lt;li&gt;ufficio HR assente o distratto&lt;/li&gt;
        &lt;li&gt;disorganizzazione generale&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Quindi, quando molti anni fa, da junior, formulai questa ipotesi, osservai che &lt;strong&gt;aveva senso&lt;/strong&gt; e la diedi per corretta, su base sperimentale.&lt;/p&gt;
        &lt;p&gt;Negli anni ho raffinato questa ipotesi, partendo sempre dal preconcetto, in parte giusto, che la “colpa” (passami il termine) fosse sempre di chi faceva le regole.&lt;/p&gt;
        &lt;p&gt;Via via ho aggiunto strati su strati che evidenziavano come ci sia sempre qualcuno che ha più potere decisionale della persona che reputi di “più alto grado” (anche se la catena non è così gerarchica).&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Poi il crack.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;h2 id=&quot;il-periodo-del-revisionismo&quot;&gt;Il periodo del revisionismo&lt;/h2&gt;
        &lt;p&gt;Mi sono trovato a un certo punto della mia carriera, purtroppo o per fortuna, a stare &lt;em&gt;dall’altra parte&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;A questo punto, anche un po’ per amor proprio, ho dovuto comprendere &lt;strong&gt;cosa stava succedendo a me&lt;/strong&gt;. Si perché anche io da &lt;em&gt;team leader&lt;/em&gt; ho avuto necessità o sono stato costretto a fare orari non molto piacevoli.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Il revisionismo è stato traumatico per me.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Da questo ho tratto altri motivi da aggiungere alla lista sopra, senza però scendere mai profondamente nella causa radice.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Sostanzialmente non ho seguito la regola dei 5 perché&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;La nuova lista quindi è aggiornata nel modo seguente:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;pianificazione errata delle attività&lt;/li&gt;
        &lt;li&gt;manager stacanovisti&lt;/li&gt;
        &lt;li&gt;ufficio HR assente o distratto&lt;/li&gt;
        &lt;li&gt;commerciali che vendono funzionalità impossibili nei tempi&lt;/li&gt;
        &lt;li&gt;accordi blindati tra &lt;em&gt;executive&lt;/em&gt;&lt;/li&gt;
        &lt;li&gt;imposizioni da parte del cliente&lt;/li&gt;
        &lt;li&gt;disorganizzazione generale&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Ne ho aggiunti 3 sfilando i &lt;em&gt;team leader&lt;/em&gt;, solo perché questa lista vede le cose da quel medesimo punto di vista.&lt;/p&gt;
        &lt;p&gt;&lt;em&gt;Stranamente&lt;/em&gt; c’è ancora il punto sulla pianificazione errata, e il motivo è semplice: capita spesso che pur essendo &lt;em&gt;team leader&lt;/em&gt; sia comunque il manager ad avere l’ultima parola sui numeri delle stime per le attività, che praticamente sempre subiscono riduzioni. Capita meno spesso, ma capita, che il &lt;em&gt;team leader&lt;/em&gt; si basi su assunzioni errate nel formulare le stime, risultando quindi in stime errate, perché troppo ottimistiche o perché &lt;em&gt;pressappochistiche&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Tutto questo però non mi bastava, sapevo di non essermi fatto abbastanza domande, sapevo che c’era ancora qualche &lt;strong&gt;perché&lt;/strong&gt; non espresso.&lt;/p&gt;
        &lt;h2 id=&quot;lintrospezione&quot;&gt;L’introspezione&lt;/h2&gt;
        &lt;p&gt;Il perché che ha sbloccato il ragionamento ha portato alla risposta seguente, che mi ha un po’ spiazzato e un po’ sollevato.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Le persone fanno tardi in ufficio perché vogliono&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Mi ha spiazzato, devo ammetterlo. Realizzare che i miei orari in ufficio sono causati da me stesso non è proprio quello che mi aspettavo di scoprire.&lt;br /&gt;
        Ma la cosa più particolare è che non sono arrivato a questa conclusione tramite una mia introspezione personale, piuttosto l’ho realizzato osservando altri, da un po’ più vicino.&lt;/p&gt;
        &lt;h2 id=&quot;il-dato&quot;&gt;Il dato&lt;/h2&gt;
        &lt;p&gt;L’osservazione ha richiesto diverso tempo e campioni eterogenei, e fortunatamente da consulente ne ho avuti un bel po’ a disposizione.&lt;/p&gt;
        &lt;p&gt;Non rivelo nulla di quello che ho visto, quindi il sunto è che ho visto persone preferire il lavoro alla famiglia, ho visto persone che avevano la loro famiglia al lavoro e ho visto persone senza famiglia o lontano da casa avere amici solo dentro al lavoro. Poi però ho visto anche chi metteva la famiglia al di sopra di tutto, chi era scientificamente preciso nel rispettare gli orari e chi aveva interessi ben oltre l’informatica.&lt;/p&gt;
        &lt;p&gt;Questi ultimi mi hanno fatto vedere qualcosa che mi ha aperto gli occhi.&lt;/p&gt;
        &lt;h2 id=&quot;il-famoso-ambiente-tossico&quot;&gt;Il famoso “ambiente tossico”&lt;/h2&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Si sa che le aziende tentano di evitare di creare ambienti tossici per il lavoro.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Questa sembra una battuta. Ma non lo è.&lt;/p&gt;
        &lt;p&gt;Ci provano davvero, si &lt;em&gt;sforzano seriamente&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Ma allora perché &lt;strong&gt;sembra&lt;/strong&gt; &lt;em&gt;così tanto&lt;/em&gt; &lt;strong&gt;falso&lt;/strong&gt;?&lt;/p&gt;
        &lt;p&gt;Sembra falso perché, come ho sempre immaginato e questa osservazione conferma l’idea, il fine non giustifica &lt;em&gt;mai&lt;/em&gt; i mezzi. &lt;strong&gt;Mai&lt;/strong&gt;.&lt;/p&gt;
        &lt;p&gt;Il mezzo ovviamente è lo straordinario, mentre il fine, beh, quello è palese, la consegna in tempi brevi.&lt;br /&gt;
        Il problema è sempre &lt;strong&gt;quanto&lt;/strong&gt; brevi e quanto veramente è utile o necessario che questi tempi siano brevi.&lt;/p&gt;
        &lt;p&gt;La maggior parte delle volte non è utile, anzi è deleterio per la qualità del prodotto consegnato e per la qualità della vita del lavoratore.&lt;/p&gt;
        &lt;p&gt;Fatto sta che succede, gli orari cambiano poco se non nulla e alla fine per un motivo o per un altro si torna a casa sempre a orari imprecisati della sera.&lt;/p&gt;
        &lt;p&gt;La conclusione più ovvia sarebbe “facciamo in modo che le aziende si sforzino di più per raggiungere questo risultato”.&lt;br /&gt;
        Si, se solo il lavoratore non avesse così tanta voglia di fare degli straordinari non pagati.&lt;/p&gt;
        &lt;p&gt;Quindi la conclusione definitiva alla fine della mia introspezione è:&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Fai tardi quanto vuoi, se vuoi, ma dai la colpa a te stesso (o non darla a nessuno)&lt;br /&gt;
        Altrimenti, non fare tardi “&lt;em&gt;‘ché c’hai ‘na famiglia&lt;/em&gt;”&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Grazie ad Alberto che mi segue sempre con tanta dedizione, pure che è più di un mese che non pubblico (e avevo detto che avrei scritto qualcosa ogni giorno).&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Vai a casa Albè, che è tardi!&lt;/p&gt;
        &lt;/blockquote&gt;</content><author><name>kLeZ</name></author><summary type="html">Qualche sera fa ragionavo sul mio pregresso lavorativo, e nello specifico mi concentravo sull’ambiente di lavoro. Il trigger è stato il treno che ho preso quella sera, Ostiense, 20.40, che non è proprio il massimo della vita, questo posso dirlo, perché mi porta a casa alle 21.45 circa. Alla fine dell’analisi preliminare ho stabilito che volevo concentrare il mio ragionamento sull’orario di lavoro (ancora una volta) tentando di sviscerare il perché mi riduco sempre a sopportare certi orari. Mi sono trovato a dover confutare una ipotesi che portavo con me da lungo tempo. Avevo già verificato sperimentalmente questa ipotesi anni fa, e sembrava reggere. Fino a ora.</summary></entry><entry><title type="html">Come vedere Star Wars da neofiti o fan</title><link href="https://klez.me/2019/06/16/come-vedere-star-wars-da-neofiti-o-fan/" rel="alternate" type="text/html" title="Come vedere Star Wars da neofiti o fan" /><published>2019-06-16T17:19:14+02:00</published><updated>2019-06-16T17:19:14+02:00</updated><id>https://klez.me/2019/06/16/come-vedere-star-wars-da-neofiti-o-fan</id><content type="html" xml:base="https://klez.me/2019/06/16/come-vedere-star-wars-da-neofiti-o-fan/">&lt;p&gt;Sono un &lt;em&gt;fan&lt;/em&gt; di Guerre Stellari, probabilmente lo saprai.&lt;br /&gt;
        Da appassionato del genere e dei film della Saga, negli anni ho sempre avuto quella sorta di richiamo che ogni tanto mi porta a vedere &lt;strong&gt;interamente&lt;/strong&gt; tutti i film.&lt;/p&gt;
        &lt;p&gt;La saga però ha dei &lt;em&gt;problemi&lt;/em&gt; particolari, il primo dei quali è l’ordine di visione.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;p&gt;Ora, grazie all’uscita dell’ultimo film e a causa dell’imminente uscita del terzo e ultimo episodio della nuovissima trilogia (la terza trilogia, quindi una trilogia di trilogie) vedo con piacere tutti i film.&lt;/p&gt;
        &lt;p&gt;Ma ora più che mai si presenta un problema enorme: sono veramente tanti!&lt;/p&gt;
        &lt;p&gt;Negli anni io e il mio amico, &lt;em&gt;fanatico&lt;/em&gt; anche lui della storia, abbiamo messo a punto un sistema ingegnoso per la visione &lt;strong&gt;coerente&lt;/strong&gt; della saga, anche per chi, da neofita, volesse vedere tutti i film per la prima volta.&lt;/p&gt;
        &lt;p&gt;Purtroppo uno degli &lt;em&gt;spoiler&lt;/em&gt; più famosi di sempre è quello relativo al V Episodio, quindi sarà difficile mantenere completamente il riserbo sull’argomento, ma ci si prova.&lt;/p&gt;
        &lt;p&gt;Anni fa su un &lt;em&gt;blog&lt;/em&gt; trovammo l’idea pazza di un tizio che spiegava quello che lui chiamava il &lt;strong&gt;Machete order&lt;/strong&gt;, proprio perché il suo blog si chiamava Machete. Ecco, noi tendiamo verso quell’ordine che ci sembra il più coerente e motivato e lo revisioniamo per farci entrare anche la nuova saga e tutti gli &lt;em&gt;spin-off&lt;/em&gt; finora usciti.&lt;/p&gt;
        &lt;h2 id=&quot;loriginale-machete-order&quot;&gt;L’originale Machete Order&lt;/h2&gt;
        &lt;p&gt;L’ordine originale non comprendeva altro che le due trilogie, la vecchia e la nuova.&lt;/p&gt;
        &lt;p&gt;La lista dei film da vedere in sequenza era:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;Episodio IV - Una nuova speranza&lt;/li&gt;
        &lt;li&gt;Episodio V - L’impero colpisce ancora&lt;/li&gt;
        &lt;li&gt;Episodio I - La minaccia fantasma&lt;/li&gt;
        &lt;li&gt;Episodio II - L’attacco dei cloni&lt;/li&gt;
        &lt;li&gt;Episodio III - La vendetta dei Sith&lt;/li&gt;
        &lt;li&gt;Episodio VI - Il ritorno dello Jedi&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;La motivazione era semplice: la trilogia &lt;em&gt;prequel&lt;/em&gt; viene trattata come un &lt;em&gt;flashback&lt;/em&gt;, che arriva immediatamente dopo il &lt;em&gt;cliffhanger&lt;/em&gt; di Episodio V.&lt;/p&gt;
        &lt;p&gt;Ha perfettamente senso dal nostro punto di vista perché permette di mantenere intatta la figura minacciosa e crudele del cattivo più interessante della saga (così come i vecchi fan hanno imparato ad apprezzare), pur dando spazio alla sua storia personale prima di quella discesa affannosa nel &lt;strong&gt;Lato Oscuro&lt;/strong&gt;, spiegandone le motivazioni.&lt;/p&gt;
        &lt;p&gt;Il ritorno dello Jedi serve per chiudere, a quel punto, tutte le trame ancora aperte dei cinque film precedenti.&lt;/p&gt;
        &lt;p&gt;Questo per noi è sempre stato perfettamente sensato, e permetteva la visione dell’intera saga in una giornata, in modo che anche un neofita potesse permettersi una &lt;em&gt;full immersion&lt;/em&gt; nella storia.&lt;/p&gt;
        &lt;h2 id=&quot;la-revisione&quot;&gt;La revisione&lt;/h2&gt;
        &lt;p&gt;Necessariamente a causa dell’uscita di un’altra trilogia e (attualmente) due &lt;em&gt;spin-off&lt;/em&gt;, c’è bisogno di una revisione di questo ordine, del tutto sensato ma ormai obsoleto, mancando di posizionare i nuovi film.&lt;/p&gt;
        &lt;p&gt;Sempre fermi i punti riguardanti l’ordine originale, il nuovo ordine comprende i due nuovi film &lt;em&gt;Episodio VII - Il risveglio della forza&lt;/em&gt; e &lt;em&gt;Episodio VIII - Gli ultimi Jedi&lt;/em&gt;, &lt;em&gt;Rogue One&lt;/em&gt; e &lt;em&gt;Solo&lt;/em&gt;, questi ultimi due &lt;em&gt;spin-off&lt;/em&gt; riguardanti la trilogia classica.&lt;/p&gt;
        &lt;p&gt;Quindi il nostro &lt;em&gt;Machete Order&lt;/em&gt; revisionato appare in questa maniera:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;Rogue One: A star wars story&lt;/li&gt;
        &lt;li&gt;Episodio IV - Una nuova speranza&lt;/li&gt;
        &lt;li&gt;Episodio V - L’impero colpisce ancora&lt;/li&gt;
        &lt;li&gt;Episodio I - La minaccia fantasma&lt;/li&gt;
        &lt;li&gt;Episodio II - L’attacco dei cloni&lt;/li&gt;
        &lt;li&gt;Episodio III - La vendetta dei Sith&lt;/li&gt;
        &lt;li&gt;Episodio VI - Il ritorno dello Jedi&lt;/li&gt;
        &lt;li&gt;Episodio VII - Il risveglio della forza&lt;/li&gt;
        &lt;li&gt;Solo: A star wars story&lt;/li&gt;
        &lt;li&gt;Episodio VIII - Gli ultimi Jedi&lt;/li&gt;
        &lt;li&gt;Episodio IX - L’ascesa di Skywalker&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Se noti c’è una &lt;em&gt;piccola&lt;/em&gt; imprecisione qui. Il film sul giovane Han Solo è posto dopo Episodio VII. I motivi qui sono due principalmente.&lt;/p&gt;
        &lt;p&gt;Innanzi tutto, il film non è stato un granché, pur meritando di essere visto almeno una volta, esattamente come Episodio I. Quindi metterlo all’inizio della visione potrebbe provocare noia e rovinare la visione degli altri meravigliosi film.&lt;/p&gt;
        &lt;p&gt;Il secondo motivo è più una questione di continuità con la nostra filosofia del &lt;em&gt;flashback&lt;/em&gt;: tutte le storie che raccontano momenti &lt;em&gt;passati&lt;/em&gt; di personaggi già presenti nella trilogia classica per noi sono considerati &lt;em&gt;flashback&lt;/em&gt;.&lt;br /&gt;
        Esattamente come per la trilogia &lt;em&gt;prequel&lt;/em&gt; quindi, preferiamo mettere il film sulla giovinezza di Han Solo come &lt;em&gt;flashback&lt;/em&gt; dopo il consueto &lt;em&gt;cliffhanger&lt;/em&gt;, che lo riguarda molto da vicino.&lt;/p&gt;
        &lt;h2 id=&quot;il-problema-del-tempo&quot;&gt;Il problema del tempo&lt;/h2&gt;
        &lt;p&gt;Ho sempre visto la saga dall’inizio alla fine nello stesso giorno, a meno delle uscite al cinema che comunque ogni volta richiedono una visione completa dell’intero cofanetto.&lt;/p&gt;
        &lt;p&gt;Ora però le cose sono molto cambiate, perché sono stati aggiunti ben quattro nuovi film, e un quinto sta per arrivare, tra soli 6 mesi circa.&lt;/p&gt;
        &lt;p&gt;Il tempo comincia a diventare una variabile importante per una buona e &lt;strong&gt;sana&lt;/strong&gt; visione della super-saga.&lt;/p&gt;
        &lt;p&gt;Motivo per cui abbiamo iniziato a fare dei calcoli.&lt;/p&gt;
        &lt;h3 id=&quot;durata-dei-film-di-star-wars-fonte-wikipedia&quot;&gt;Durata dei film di star wars (fonte: &lt;a href=&quot;https://it.wikipedia.org/wiki/Guerre_stellari&quot;&gt;Wikipedia&lt;/a&gt;)&lt;/h3&gt;
        &lt;table class=&quot;table table-striped table-responsive-md&quot;&gt;
        &lt;thead&gt;
        &lt;tr&gt;
        &lt;th&gt;Film&lt;/th&gt;
        &lt;th&gt;Durata&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio IV&lt;/td&gt;
        &lt;td&gt;125 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio V&lt;/td&gt;
        &lt;td&gt;124 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio VI&lt;/td&gt;
        &lt;td&gt;134 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio I&lt;/td&gt;
        &lt;td&gt;136 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio II&lt;/td&gt;
        &lt;td&gt;142 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio III&lt;/td&gt;
        &lt;td&gt;140 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio VII&lt;/td&gt;
        &lt;td&gt;136 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Episodio VIII&lt;/td&gt;
        &lt;td&gt;152 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Rogue One&lt;/td&gt;
        &lt;td&gt;133 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;Solo&lt;/td&gt;
        &lt;td&gt;135 min&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/tbody&gt;
        &lt;tbody&gt;
        &lt;tr&gt;
        &lt;td&gt;Totale&lt;/td&gt;
        &lt;td&gt;1357 min (22 ore e 37 min)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/tbody&gt;
        &lt;/table&gt;
        &lt;p&gt;Queste sono le durate ricavate direttamente da Wikipedia, che ci aiutano a capire quanto tempo dovremmo stare davanti alla televisione a vedere film di Star Wars. Diciamo che 23 ore di visione non sono proprio una cosa da poter raccomandare.&lt;/p&gt;
        &lt;p&gt;Nella missione di riuscire a trovare un compromesso coerente tra il nostro &lt;em&gt;bisogno&lt;/em&gt; di appassionati di vedere l’intera super-saga, con la biologia umana e con il ciclo naturale del tempo e dell’alternanza giorno-notte abbiamo deciso, un po’ a malincuore, di dividere le visioni in blocchi coerenti, mantenendoli al contempo sufficientemente lunghi e sufficientemente corti.&lt;/p&gt;
        &lt;h2 id=&quot;i-blocchi&quot;&gt;I blocchi&lt;/h2&gt;
        &lt;p&gt;Il &lt;strong&gt;primo blocco&lt;/strong&gt; parte col botto (è proprio il caso di dirlo), con tre film: Rogue One, Episodio IV, Episodio V.&lt;/p&gt;
        &lt;p&gt;La durata è di 6 ore e 22 minuti, un buon pomeriggio di visione che può finire la sera dopo cena, con uno stacco preferibilmente tra Episodio IV ed Episodio V.&lt;/p&gt;
        &lt;p&gt;Il consiglio è di cominciare per le 15:30 potendo così cenare per le 20:00, riprendendo le ultime due ore di visione alle 21:00 con il famigerato “L’impero colpisce ancora”. Liberi tutti per le 23:30 (tra una cosa e l’altra).&lt;/p&gt;
        &lt;p&gt;Il &lt;strong&gt;secondo blocco&lt;/strong&gt; è interamente dedicato alla trilogia &lt;em&gt;prequel&lt;/em&gt;, il nostro &lt;em&gt;flashback&lt;/em&gt;, della durata complessiva di 6 ore e 58 minuti.&lt;/p&gt;
        &lt;p&gt;Lo stacco della cena qui è conveniente farlo tra Episodio II ed Episodio III.&lt;/p&gt;
        &lt;p&gt;Anche qui, munisciti di popcorn, cena, dopo cena e un bel pomeriggio con serata a disposizione, parti per le 15:00 (abbiamo mezz’ora di visione in più) e liberi tutti verso le 23:30.&lt;/p&gt;
        &lt;p&gt;Il &lt;strong&gt;terzo blocco&lt;/strong&gt; lega il vecchio al nuovo, il classico al contemporaneo, con un piccolo &lt;em&gt;flashback&lt;/em&gt; che chiude un’altra trama: Episodio VI, Episodio VII, Solo.&lt;/p&gt;
        &lt;p&gt;La durata è di 6 ore e 45 minuti, leggermente meno del blocco precedente, ma comunque abbastanza per arrivare allo stesso consiglio, munitevi di un pomeriggio più serata.&lt;/p&gt;
        &lt;p&gt;Il mio consiglio personale è di non programmare il &lt;em&gt;break&lt;/em&gt; della cena tra Episodio VII e Solo: in tutta onestà finireste per non apprezzare quest’ultimo film, avendo appena visto due film molto migliori di questo sia come qualità della produzione sia come sceneggiatura.&lt;/p&gt;
        &lt;p&gt;Semmai converrebbe non arrivare per niente alla cena, programmando la visione in tarda mattinata, con &lt;em&gt;break&lt;/em&gt; per il pranzo subito dopo Episodio VI, lasciando accoppiati Episodio VII e Solo, dando continuità a quest’ultimo, senza perdere di spinta.&lt;/p&gt;
        &lt;p&gt;Il &lt;strong&gt;quarto blocco&lt;/strong&gt; per ora comprende solo Episodio VIII, visto che Episodio IX non è ancora uscito, e si attende anche l’annuncio del terzo &lt;em&gt;spin-off&lt;/em&gt; della saga che potrebbe completamente scombinare questi piani.&lt;/p&gt;
        &lt;p&gt;La durata del singolo Episodio VIII è di 2 ore e 32 minuti, e a mio avviso può essere accodato al terzo blocco, fino all’uscita, a fine di quest’anno, di Episodio IX.&lt;/p&gt;
        &lt;p&gt;Per ora, fino a che non sarà disponibile Episodio IX, può essere visto dopo cena nella stessa giornata del terzo blocco, con un buon riposo di un paio d’ore prima di riprendere la visione.&lt;/p&gt;
        &lt;h2 id=&quot;conclusione&quot;&gt;Conclusione&lt;/h2&gt;
        &lt;p&gt;Spero che questo modo di vedere la saga ti dia lo slancio per vederla tutta (per la prima volta o nuovamente) prima dell’uscita dell’episodio conclusivo della nuova saga in uscita a fine anno.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Sono un fan di Guerre Stellari, probabilmente lo saprai. Da appassionato del genere e dei film della Saga, negli anni ho sempre avuto quella sorta di richiamo che ogni tanto mi porta a vedere interamente tutti i film. La saga però ha dei problemi particolari, il primo dei quali è l’ordine di visione.</summary></entry><entry><title type="html">FLOSSness di una distro Android</title><link href="https://klez.me/2019/05/27/flossness-di-una-distro-android/" rel="alternate" type="text/html" title="FLOSSness di una distro Android" /><published>2019-05-27T20:37:41+02:00</published><updated>2019-05-27T20:37:41+02:00</updated><id>https://klez.me/2019/05/27/flossness-di-una-distro-android</id><content type="html" xml:base="https://klez.me/2019/05/27/flossness-di-una-distro-android/">&lt;p&gt;Da molto tempo ormai sono un utilizzatore di &lt;em&gt;Android&lt;/em&gt; in versioni alternative alle &lt;em&gt;ROM&lt;/em&gt; cosiddette &lt;em&gt;stock&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Ora, dopo parecchio tempo passato a valutare la situazione, sono pronto per dare il mio giudizio sullo stato di salute di progetti &lt;em&gt;FLOSS&lt;/em&gt; che possono regalarci un po’ di &lt;em&gt;open source&lt;/em&gt; nella nostra vita quotidiana al fianco del nostro &lt;em&gt;smartphone&lt;/em&gt;.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;definizioni&quot;&gt;Definizioni&lt;/h2&gt;
        &lt;p&gt;Comincio la trattazione definendo un paio di termini e concetti che ho usato qui sopra.&lt;/p&gt;
        &lt;h3 id=&quot;cosè-una-rom&quot;&gt;Cos’è una ROM&lt;/h3&gt;
        &lt;p&gt;Di fatto una ROM è un termine preso in prestito dal gergo “antico” dei firmware.&lt;/p&gt;
        &lt;p&gt;Una volta il firmware era in sola lettura per il dispositivo che lo eseguiva (&lt;em&gt;read-only&lt;/em&gt;) e di conseguenza l’aggiornamento doveva essere eseguito forzando il chip a recepire una nuova scrittura tramite un apposito strumento chiamato “programmatore”.&lt;/p&gt;
        &lt;div class=&quot;premonition info&quot;&gt;&lt;div class=&quot;fa fa-info-circle&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;&lt;em&gt;ROM&lt;/em&gt; quindi significa “&lt;em&gt;read-only memory&lt;/em&gt;” cioè memoria in sola
        lettura. Parlo di gergo “antico” proprio perché ad oggi le
        memorie dei dispositivi “&lt;em&gt;embedded&lt;/em&gt;” non sono più in sola
        lettura.&lt;/p&gt;
        &lt;/div&gt;&lt;/div&gt;
        &lt;h3 id=&quot;cosè-il-floss&quot;&gt;Cos’è il FLOSS&lt;/h3&gt;
        &lt;div class=&quot;premonition info&quot;&gt;&lt;div class=&quot;fa fa-info-circle&quot;&gt;&lt;/div&gt;&lt;div class=&quot;content&quot;&gt;&lt;p&gt;Il termine è un acronimo che usa anche una parola che
        effettivamente non esiste nel vocabolario inglese
        e che si traduce a grandi linee con:&lt;br /&gt;
        “&lt;strong&gt;&lt;em&gt;Free Libre Open Source Software&lt;/em&gt;&lt;/strong&gt;”.&lt;/p&gt;
        &lt;/div&gt;&lt;/div&gt;
        &lt;p&gt;In termini spiccioli parlo di tutto il software che non solo è &lt;em&gt;open source&lt;/em&gt; (mi aspetto che tu sappia cos’è, altrimenti &lt;a href=&quot;https://it.wikipedia.org/wiki/Open_source&quot;&gt;sappilo&lt;/a&gt;) ma anche libero, nei termini &lt;em&gt;free&lt;/em&gt; &lt;em&gt;as in freedom&lt;/em&gt;, rafforzato da una parola squisitamente presa in prestito dalle lingue neolatine, &lt;em&gt;libre&lt;/em&gt; che vuol dire “libero”.&lt;/p&gt;
        &lt;h2 id=&quot;la-piattaforma&quot;&gt;La piattaforma&lt;/h2&gt;
        &lt;div class=&quot;premonition citation&quot;&gt;&lt;div class=&quot;fas fa-quote-left&quot;&gt;&lt;/div&gt;&lt;blockquote class=&quot;content blockquote&quot;&gt;&lt;p&gt;Android non è solo Android.&lt;/p&gt;
        &lt;/blockquote&gt;&lt;/div&gt;
        &lt;p&gt;Il sistema che vedi ogni giorno non è un solo sistema, ma di fatto è più un &lt;em&gt;ecosistema&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Probabilmente l’hai intuito già solo notando la grande diversità delle varie “incarnazioni” di Android, così come vengono chiamate da quegli orrendi giornalisti mediocri che di informatica, &lt;em&gt;open source&lt;/em&gt; e &lt;strong&gt;Linux&lt;/strong&gt; non ne sanno assolutamente nulla, e che con pochezza grammaticale reinventano un termine che invece esiste ed è di uso comune nell’ambito tecnico.&lt;/p&gt;
        &lt;p&gt;Il termine che da ora in poi userò, e che dovrai usare anche tu per onorare i poveri tecnici che ogni giorno dedicano la loro vita a costruire qualcosa con cui tu eventualmente puoi farti &lt;em&gt;selfie&lt;/em&gt; da postare su &lt;em&gt;Instagram&lt;/em&gt;, è “&lt;em&gt;distribuzione&lt;/em&gt;”, o &lt;em&gt;distro&lt;/em&gt; per gli amici.&lt;/p&gt;
        &lt;h3 id=&quot;cosè-una-distribuzione&quot;&gt;Cos’è una distribuzione&lt;/h3&gt;
        &lt;p&gt;Lo so che i &lt;em&gt;cos’è&lt;/em&gt; rientrano tutti nella sezione appena conclusa, e so che questo è il paragrafo in cui si parla della ciccia, dopo aver chiarito il dizionario di base di comune accordo. Però è necessario spiegare cos’è una distribuzione, così ti sarà chiaro anche perché parlo di Android come piattaforma.&lt;/p&gt;
        &lt;p&gt;Una distribuzione è in linea di massima una selezione di software che concorrono a costituire un sistema operativo, più o meno completo nel software preinstallato.&lt;/p&gt;
        &lt;p&gt;Partendo dalla base, Android di fatto è un sistema basato su Linux, re troneggiante della definizione di “&lt;em&gt;distro&lt;/em&gt;”, questo è il primo strato.&lt;/p&gt;
        &lt;p&gt;Lo strato successivo è il software di base per rendere questa &lt;em&gt;distro&lt;/em&gt; Linux funzionante al minimo indispensabile per poter eseguire un programma, quindi dispositivo pienamente funzionante ma con solo un terminale a disposizione (in alcuni casi neanche quello).&lt;/p&gt;
        &lt;p&gt;Nello strato successivo troviamo tutta una serie di altri software specifici di Android, più una serie di librerie scritte appositamente per questa piattaforma, che vanno dalla configurazione del modem al processo che esegue le onnipresenti (e onnipotenti) Apps. Questo costituisce il sistema Android minimale, adatto solo a “partire” e visualizzare una scritta sullo schermo: “Hello world!”.&lt;/p&gt;
        &lt;p&gt;Sopra a questo strato minimo, che costituisce il sistema di base e il &lt;em&gt;Native Development Kit&lt;/em&gt;, vengono poggiate tutte le Apps.&lt;br /&gt;
        Se ve lo steste chiedendo, anche l’intera interfaccia utente di Android è un’App, è quella che vedete nominata come “UI Sistema” o “System UI”.&lt;/p&gt;
        &lt;p&gt;Questo, al netto di molte altre cose che ho volutamente tralasciato per necessità prosastica, è quello che è contenuto nel progetto &lt;em&gt;&lt;a href=&quot;https://it.wikipedia.org/wiki/Android#Android_Open_Source_Project&quot;&gt;AOSP&lt;/a&gt;&lt;/em&gt;, l’&lt;em&gt;Android Open Source Project&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;AOSP, quindi, è la nostra Piattaforma nonché, volendo essere fiscali, anche una &lt;em&gt;distro&lt;/em&gt; Linux.&lt;/p&gt;
        &lt;p&gt;I vari sistemi basati su AOSP che trovi installati sui dispositivi che teniamo sempre in tasca sono distribuzioni, o &lt;em&gt;distro&lt;/em&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;definizione-di-flossness&quot;&gt;Definizione di FLOSSness&lt;/h2&gt;
        &lt;p&gt;Ma cosa rende &lt;em&gt;FLOSS&lt;/em&gt; una &lt;em&gt;distro&lt;/em&gt; Android? In molti danno la loro personale definizione. Anche io voglio darne una, vorrei chiarire i punti su cui tutti sono d’accordo e vorrei aggiungere qualche punto che io ritengo fondamentale per evitare che questo sia l’ennesimo inno all’&lt;em&gt;open source&lt;/em&gt; inutilizzabile che si trova spesso in giro.&lt;/p&gt;
        &lt;p&gt;Aderire ai principi &lt;em&gt;FLOSS&lt;/em&gt; per una &lt;em&gt;distro&lt;/em&gt; significa accettare che tutto il software installato nel dispositivo sia libero.&lt;/p&gt;
        &lt;p&gt;E già questo è estremamente complicato considerando anche solo i driver per tutto l’hardware proprietario che è contenuto nel dispositivo.&lt;/p&gt;
        &lt;p&gt;Per me però un dispositivo è veramente &lt;em&gt;FLOSS&lt;/em&gt; solo quando anche i servizi che vengono invocati dalle app sono liberi, così come i sistemi operativi e le infrastrutture coinvolte.&lt;/p&gt;
        &lt;p&gt;E questo è &lt;strong&gt;impossibile&lt;/strong&gt; a meno di mantenere la propria infrastruttura, costruirsi i propri &lt;em&gt;smartphone&lt;/em&gt; e farlo solo con &lt;a href=&quot;https://it.wikipedia.org/wiki/Hardware_libero&quot;&gt;open hardware&lt;/a&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;la-verità-sta-nel-merito&quot;&gt;La verità sta nel &lt;em&gt;merito&lt;/em&gt;&lt;/h2&gt;
        &lt;p&gt;Di solito direi che la verità sta nel mezzo. Ma in questo caso il mezzo è il compromesso, e il compromesso a mio modesto parere non è abbastanza soddisfacente per essere accettato.&lt;/p&gt;
        &lt;p&gt;Per mio limite accetto l’impossibilità di costruirmi e gestirmi l’hardware e il firmware, posso fare qualcosa solo da AOSP in su.&lt;br /&gt;
        Posto che AOSP è effettivamente &lt;em&gt;open source&lt;/em&gt;, dovrei a questo punto essere in grado di definirmi soddisfatto della mia &lt;em&gt;non perfetta&lt;/em&gt; FLOSSness. E invece no.&lt;/p&gt;
        &lt;p&gt;Perché AOSP da sola o &lt;em&gt;Lineage OS&lt;/em&gt;, ex &lt;em&gt;Cyanogen Mod&lt;/em&gt;, che seguo da sempre, o qualunque altra &lt;em&gt;distro open source&lt;/em&gt; non sono molto utilizzabili così come sono.&lt;/p&gt;
        &lt;p&gt;La prima &lt;em&gt;feature&lt;/em&gt; che manca, e davvero si sente tantissimo, è l’&lt;em&gt;App Store&lt;/em&gt;, quella famosa app che magari non apri così spesso ma che ti serve necessariamente qualora tu voglia &lt;strong&gt;installare un’app&lt;/strong&gt;. Ecco, diciamo che la &lt;em&gt;distro&lt;/em&gt; si salva solo nel momento in cui le app che usi ogni giorno sono preinstallate, e normalmente non è così.&lt;/p&gt;
        &lt;p&gt;Mancano da morire anche i servizi di localizzazione; Si perché il GPS, che è un pezzettino di hardware da qualche parte nel tuo telefono, da solo sembra non essere sufficiente a garantire che i servizi di localizzazione funzionino a dovere. E ovviamente insieme ai servizi di localizzazione è persa anche l’app di navigazione e mappe.&lt;/p&gt;
        &lt;p&gt;Una delle &lt;em&gt;feature&lt;/em&gt; più sottovalutate di sempre, e anche questa mancante ovviamente, è la sincronizzazione con un servizio di &lt;em&gt;Cloud Storage&lt;/em&gt;; Chiaramente è mancante anche il servizio stesso.&lt;/p&gt;
        &lt;p&gt;Con molta fatica, negli anni sono riuscito a venire a capo di alcuni di questi punti, ma il merito della soluzione non è mio. La comunità in questi anni è stata piuttosto prolifica nella produzione di app per Android, una su tutte &lt;a href=&quot;https://it.wikipedia.org/wiki/F-Droid&quot;&gt;F-Droid&lt;/a&gt; che pone le basi per una &lt;em&gt;community&lt;/em&gt; Android &lt;em&gt;FLOSS&lt;/em&gt; coesa e compatta nella creazione di una &lt;em&gt;distro&lt;/em&gt; Android &lt;strong&gt;veramente&lt;/strong&gt; &lt;em&gt;FLOSS&lt;/em&gt;, quantomeno nel software.&lt;/p&gt;
        &lt;p&gt;Il mio &lt;em&gt;setup&lt;/em&gt; di base comprende queste app:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/&quot;&gt;F-Droid&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/packages/at.bitfire.davdroid/&quot;&gt;DAVx&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/org.sufficientlysecure.keychain/&quot;&gt;OpenKeychain&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/com.zeapo.pwdstore/&quot;&gt;Password Store&lt;/a&gt; (su questa app ho aneddoti, arriveranno :grin:)&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/com.fsck.k9/&quot;&gt;K9-Mail&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/com.nextcloud.client/&quot;&gt;Nextcloud&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/net.gsantner.markor/&quot;&gt;Markor&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;https://f-droid.org/it/packages/com.manichord.mgit&quot;&gt;MGit&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Queste e alcune altre app mi aiutano a non sentire (troppo) la mancanza di &lt;em&gt;BigG&lt;/em&gt; &amp;amp; co. e mi aiutano a rendere il mio &lt;em&gt;smartphone&lt;/em&gt; qualcosa di utile piuttosto che renderlo un costoso soprammobile.&lt;/p&gt;
        &lt;p&gt;Purtroppo siamo ancora in una fase in cui quello che ho fatto io per avere qualcosa di effettivamente usabile richiede grossi sforzi di studio della materia e alcuni compromessi, accettando talvolta semplicemente di non poter fare qualcosa (pochissime operazioni, te lo assicuro, e spesso il motivo non è tecnologico ma etico).&lt;/p&gt;
        &lt;h3 id=&quot;uno-spiraglio-di-luce-forse&quot;&gt;Uno spiraglio di luce (forse)&lt;/h3&gt;
        &lt;p&gt;Fortunatamente alcuni altri &lt;em&gt;geek&lt;/em&gt; come me si sono uniti per costruire qualcosa di usabile, qualcosa però che sia “pronto all’uso” piuttosto che l’ennesima ROM da “cucinare” e “solo per smanettoni”. Questo &lt;em&gt;team&lt;/em&gt; ha come obiettivo ultimo una esperienza utente e una facilità di installazione appetibili per l’utente medio, mantenendo però la loro vocazione verso il software libero e la protezione della privacy. Questo include ovviamente l’erosione dei servizi Google in ogni punto del sistema e il passaggio a qualcosa di cui si possa avere più fiducia.&lt;/p&gt;
        &lt;p&gt;Non ne parlo oltre perché non ne voglio fare una sponsorizzazione, ma comunque sono vicino al progetto e ne sono anche un utente attivo.&lt;br /&gt;
        Se per qualche motivo hai maturato curiosità verso questo nuovo sistema, ecco il sito ufficiale di &lt;a href=&quot;https://e.foundation&quot;&gt;/e/&lt;/a&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;conclusioni&quot;&gt;Conclusioni&lt;/h2&gt;
        &lt;p&gt;Non c’è molto da concludere, visto che la soluzione è molto in divenire. Però posso trarre alcune lezioni da questo ragionamento fatto sul blog.&lt;/p&gt;
        &lt;p&gt;Innanzi tutto, apprezzo molto lo stato già molto buono dell’ecosistema di alternative libere alle app molto più consumistiche, liberticide e lesive della privacy presenti nello store libero &lt;a href=&quot;https://it.wikipedia.org/wiki/F-Droid&quot;&gt;F-Droid&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Poi, sono molto contento dell’integrazione sempre più buona di servizi protettivi della privacy che stanno nascendo e che crescono sempre più rapidamente, e di questo ne giova particolarmente l’esperienza utente, che ha finalmente anche dei servizi liberi e non solo delle app libere.&lt;/p&gt;
        &lt;p&gt;Staremo a vedere quanto ancora potranno migliorare le cose grazie a una così bella e ricca community.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Da molto tempo ormai sono un utilizzatore di Android in versioni alternative alle ROM cosiddette stock. Ora, dopo parecchio tempo passato a valutare la situazione, sono pronto per dare il mio giudizio sullo stato di salute di progetti FLOSS che possono regalarci un po’ di open source nella nostra vita quotidiana al fianco del nostro smartphone.</summary></entry><entry><title type="html">Il mio primo commento sul blog!</title><link href="https://klez.me/2019/05/10/il-mio-primo-commento-sul-blog/" rel="alternate" type="text/html" title="Il mio primo commento sul blog!" /><published>2019-05-10T08:17:31+02:00</published><updated>2019-05-10T08:17:31+02:00</updated><id>https://klez.me/2019/05/10/il-mio-primo-commento-sul-blog</id><content type="html" xml:base="https://klez.me/2019/05/10/il-mio-primo-commento-sul-blog/">&lt;p&gt;Sarò breve, ma non troppo, come al solito.&lt;/p&gt;
        &lt;p&gt;Questo blog ha ricevuto da poco un commento sotto a uno dei post pubblicati; il post è stato “Primo post da smartphone”, e subito mi sono illuminato per l’emozione che un pubblico, seppur piccolo, mi porta.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;il-commento&quot;&gt;Il commento&lt;/h2&gt;
        &lt;p&gt;Il commento però non potrai vederlo, perché si tratta di &lt;strong&gt;&lt;em&gt;SPAM&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
        &lt;p&gt;Si, hai letto bene: il primo commento su questo blog è stato uno &lt;em&gt;spam&lt;/em&gt;, un po’ demoralizzante da un certo punto di vista, ma divertente in realtà, perché come scrivo spesso certe tematiche sono di mio interesse.&lt;/p&gt;
        &lt;p&gt;Se sei curioso di vedere cosa lo &lt;em&gt;spam&lt;/em&gt; contenesse, puoi vedere la &lt;em&gt;Pull Request&lt;/em&gt; di &lt;em&gt;Staticman&lt;/em&gt; &lt;a href=&quot;https://github.com/kLeZ/kLeZ.github.io/pull/7&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Di Staticman, di cos’è e come funziona e come l’ho integrato nel mio blog, ne parlo &lt;a href=&quot;/2019/03/21/staticman/&quot;&gt;qui&lt;/a&gt; e &lt;a href=&quot;/2019/03/25/staticman-c-e/&quot;&gt;qui&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Il commento non è interessante nel contenuto ovviamente, ma è interessante usarlo per risalire all’origine e per capire il funzionamento e le motivazioni dietro allo &lt;em&gt;spam&lt;/em&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;il-report&quot;&gt;Il report&lt;/h2&gt;
        &lt;p&gt;&lt;a href=&quot;https://cleantalk.org/&quot;&gt;CleanTalk&lt;/a&gt;, società che scrive e mantiene un servizio &lt;em&gt;antispam&lt;/em&gt; (non la conoscevo prima di ora), ha raccolto informazioni su questa nuova campagna di &lt;em&gt;spam&lt;/em&gt; che ha colpito tra gli altri anche me.&lt;/p&gt;
        &lt;p&gt;Il report è &lt;a href=&quot;https://cleantalk.org/blacklists/postmaster@folmax.pw&quot;&gt;questo&lt;/a&gt;, e denota senz’altro il periodo e le zone d’azione della campagna di &lt;em&gt;spam&lt;/em&gt; che sta circolando in questo momento.&lt;/p&gt;
        &lt;p&gt;Sembrerebbe una campagna di &lt;em&gt;spamvertising&lt;/em&gt; che ha colpito in qualche giorno parecchi blog.&lt;/p&gt;
        &lt;p&gt;Sarebbe interessante, ma non è scopo di questo articolo, indagare su come ci sia finito il mio blog nel loro database di blog vittime.&lt;/p&gt;
        &lt;h2 id=&quot;le-motivazioni-dello-spamvertising&quot;&gt;Le motivazioni dello &lt;em&gt;spamvertising&lt;/em&gt;&lt;/h2&gt;
        &lt;p&gt;Questo fenomeno è molto simile in realtà, e può esservi relazionato, al fenomeno molto più comune dello &lt;em&gt;spam&lt;/em&gt; via posta elettronica, e lo scopo è sempre lo stesso, gli scopi sono sempre gli stessi: coercizione verso qualche sprovveduto di soldi o beni di qualche tipo.&lt;/p&gt;
        &lt;p&gt;Proprio perché lo &lt;em&gt;spam&lt;/em&gt; è considerato “pesca a strascico” si tende ad arrivare alla conclusione che non sia poi così problematico, in fondo è un fenomeno noto e molto semplice da controllare.&lt;/p&gt;
        &lt;p&gt;Io penso però che se esiste ancora, e in queste moli, significa che di fatto dei frutti li porta, di fatto qualcuno che ci guadagna esiste.&lt;/p&gt;
        &lt;p&gt;Purtroppo esistono poche fonti in merito, l’argomento su internet varia dal poco interessante al tabù, quindi non se ne può fare una trattazione molto approfondita, ma forse ci tornerò in futuro.&lt;/p&gt;
        &lt;p&gt;Per ora, sorrido al mio primo commento, moderato grazie a una &lt;em&gt;pull request&lt;/em&gt;, su questo blog.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Sarò breve, ma non troppo, come al solito. Questo blog ha ricevuto da poco un commento sotto a uno dei post pubblicati; il post è stato “Primo post da smartphone”, e subito mi sono illuminato per l’emozione che un pubblico, seppur piccolo, mi porta.</summary></entry><entry><title type="html">DevOps: 2 anni dopo</title><link href="https://klez.me/2019/05/04/devops-2-anni-dopo/" rel="alternate" type="text/html" title="DevOps: 2 anni dopo" /><published>2019-05-04T18:56:31+02:00</published><updated>2019-05-04T18:56:31+02:00</updated><id>https://klez.me/2019/05/04/devops-2-anni-dopo</id><content type="html" xml:base="https://klez.me/2019/05/04/devops-2-anni-dopo/">&lt;p&gt;Oggi parlo di &lt;em&gt;DevOps&lt;/em&gt;, argomento a me caro, chi mi conosce di persona sa quanto posso essere un &lt;em&gt;serial killer di &lt;strong&gt;cabbasisi&lt;/strong&gt;&lt;/em&gt; su questo argomento.&lt;/p&gt;
        &lt;p&gt;Introduco brevemente l’argomento dicendo che si tratta di una metodologia di organizzazione del lavoro strettamente legata all’informatica e che si presta molto bene per determinati gruppi di lavoro, determinati progetti e determinate aziende.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;storia-breve-ma-non-triste&quot;&gt;Storia breve (ma non triste)&lt;/h2&gt;
        &lt;p&gt;&lt;em&gt;DevOps&lt;/em&gt; è una metodologia che nasce nell’ambito di una più forte specializzazione di &lt;em&gt;Agile&lt;/em&gt; [all’inglese,  ˈædʒaɪl] nel mondo dell’informatica.&lt;/p&gt;
        &lt;p&gt;In pratica si pone l’obiettivo di sottrarre frizione al lavoro in ogni fase della costruzione di software, sponsorizzando, agevolando e in qualche caso forzando l’applicazione di standard di qualità molto elevati.&lt;/p&gt;
        &lt;p&gt;Non solo, si pone anche l’obiettivo (necessario) di ridefinire i ruoli partendo da una visione più di alto livello rispetto alle altre metodologie, dando quindi un ruolo chiave nella costruzione di software anche a chi dovrà successivamente assicurarne l’operatività (che fortunatamente è posto in modo ben chiaro non debba essere il team di sviluppo, i &lt;em&gt;Devs&lt;/em&gt;).&lt;/p&gt;
        &lt;p&gt;Nasce in seno a questa metodologia una figura chiave che prima aveva un ruolo molto meno centrale in azienda e relativamente al progetto: l’&lt;em&gt;architetto&lt;/em&gt;. Non che prima questo ruolo non esistesse, capiamoci: l’architetto è sempre esistito, ma spesso (sempre, a memoria mia) non era definito così, al di là di Matrix :grin:. Il nome che ho sentito usare più spesso era progettista, tra l’altro in qualche caso questo ruolo era “fuso” con quello di &lt;em&gt;project manager&lt;/em&gt; o di &lt;em&gt;senior analyst&lt;/em&gt;, ma forse in qualche caso può anche starci.&lt;/p&gt;
        &lt;p&gt;Paese che vai, usanze che trovi, questo mi sembra ormai assodato. Questa frase mi serve per chiarire che parlo della mia esperienza di oltre dieci anni e del “mondo informatico” romano, sono abbastanza sicuro che in altri paesi e forse anche in altre realtà italiane si sia parlato di &lt;em&gt;DevOps&lt;/em&gt; e di architetti prima rispetto a Roma (perlomeno per la mia esperienza).&lt;/p&gt;
        &lt;p&gt;Avevo detto breve, &lt;strong&gt;quindi passo alla ciccia&lt;/strong&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;cosa-sono-dev-e-ops&quot;&gt;Cosa sono Dev e Ops&lt;/h2&gt;
        &lt;p&gt;Entro nel merito analizzando la parola, chiaramente un neologismo creato unendo due parole che hanno un loro significato ma che unite spiegano brevemente di cosa parliamo.&lt;/p&gt;
        &lt;p&gt;In modo poco fantasioso, il &lt;em&gt;Dev&lt;/em&gt; è lo sviluppatore [dall’inglese, developer], la faccia di fronte (dal mio punto di vista) della medaglia, colui che produce di fatto il software.&lt;/p&gt;
        &lt;p&gt;Dall’altro lato l’&lt;em&gt;Ops&lt;/em&gt; (a cui è stato cambiato nome) è il sistemista o l’operatore [la traduzione non è letterale, Ops sta per operations], cioè colui che segue l’operatività del software e dell’infrastruttura che lo contorna.&lt;/p&gt;
        &lt;p&gt;Al di là dei termini molto &lt;em&gt;markettari&lt;/em&gt; che si usano e degli strumenti di sviluppo e di controllo esistenti, questa metodologia aiuta a riorganizzare la squadra di lavoro, definire ruoli ben precisi che sono cardine attivo della metodologia, e di fatto a rendere più efficiente e a “oliare” gli ingranaggi del lavoro quotidiano della produzione di software.&lt;/p&gt;
        &lt;p&gt;Per come la vedo io, adottando questa metodologia di lavoro l’azienda stessa acquisisce un processo standard e stabile, delle procedure e una nomenclatura conosciuta, e questo aiuta molto a ridurre la frizione quando nuovo personale (sia esso impiegato o dirigente) entra in azienda.&lt;/p&gt;
        &lt;h2 id=&quot;la-parte-interessante&quot;&gt;La parte interessante&lt;/h2&gt;
        &lt;p&gt;La metodologia &lt;em&gt;DevOps&lt;/em&gt; è una tematica complessa piena di sfaccettature diverse e ricca di commistioni tra il tecnico e il gestionale. Ma, per me, la parte interessante è quella tecnica.&lt;/p&gt;
        &lt;p&gt;Parto ammettendo che seppure &lt;em&gt;DevOps&lt;/em&gt; è un modo di organizzare il lavoro e i team, questo sia stato progressivamente sviluppato attorno agli strumenti, e questi a loro volta sono stati sviluppati pensando a una già curata organizzazione “sociale”.&lt;br /&gt;
        Questa fusione tra gli strumenti e la metodologia ha portato a una sinergia unica e un’evoluzione reciproca che finora non era stata vista con nessun’altra metodologia.&lt;/p&gt;
        &lt;p&gt;Va da se che gli strumenti partono già ottimi di base, potendo solo crescere, in particolare tutte quelle automazioni virtuose che ci fanno perdere veramente pochissimo tempo, massimizzando la produttività.&lt;/p&gt;
        &lt;p&gt;Tra questi, voglio incentivare se possibile l’uso dei test unitari e di integrazione e l’uso di sistemi di controllo delle versioni in coppia con sistemi di integrazione continua e rilascio continuo (sto traducendo dall’inglese perché detesto le buzzword [perdono]).&lt;/p&gt;
        &lt;h2 id=&quot;il-ruolo-chiave-dellarchitetto&quot;&gt;Il ruolo chiave dell’architetto&lt;/h2&gt;
        &lt;p&gt;L’architetto, è ciò che da sempre ho voluto fare nella vita, la mia massima aspirazione. Motivo per cui sono così legato a questa metodologia.&lt;/p&gt;
        &lt;p&gt;L’architetto in ottica &lt;em&gt;DevOps&lt;/em&gt; ha il ruolo fondamentale di colui che copre il lavoro creativo e scientifico al tempo stesso della progettazione del sistema.&lt;/p&gt;
        &lt;p&gt;Progettare un sistema non è per nulla un esercizio scolastico: è necessaria la conoscenza approfondita dell’ambiente di lavoro, delle tecnologie da utilizzare, degli standard internazionali, delle &lt;em&gt;policy&lt;/em&gt; (in italiano, politiche, inteso come quell’insieme di regole interne imposte da chi utilizzerà il software e da chi deve svilupparlo) e bisogna avere un occhio di riguardo per il futuro per evitare che il software diventi obsoleto troppo in fretta.&lt;/p&gt;
        &lt;p&gt;Inoltre bisogna essere scientifici nel garantire una struttura solida e comoda sia da sviluppare che da monitorare per difetti e possibili problemi di operatività, che sia resiliente e che permetta delle veloci riparazioni quando si verificano malfunzionamenti.&lt;/p&gt;
        &lt;p&gt;Non è un mestiere per sprovveduti, diciamo.&lt;/p&gt;
        &lt;p&gt;L’architetto pensa a tutto questo, e aggiusta il tiro mano a mano che il software cresce. Chi dice che l’architetto arriva e progetta il tutto, e poi dopo cambia progetto, non ha ben capito come si fa a essere un buon architetto.&lt;/p&gt;
        &lt;p&gt;Da quello che ho imparato dai vari libri che trattano l’argomento e dalla mia esperienza l’architetto è soprattutto un buon procrastinatore di decisioni e un buon equilibrista del compromesso.&lt;br /&gt;
        Il compromesso va cercato ogni qual volta c’è necessità di piegare ambiente, strumenti, librerie, il linguaggio stesso, alle esigenze dell’architettura; mentre procrastinare serve proprio a darsi il tempo di raccogliere informazioni utili, per poter progettare un’architettura migliore, senza dover necessariamente smontare tutto ogni volta che arriva un nuovo requisito.&lt;/p&gt;
        &lt;p&gt;L’architetto insomma diventa un ruolo talmente importante da potersi definire fondamentale, al punto che diventa centrale più del &lt;em&gt;project manager&lt;/em&gt; nella metodologia &lt;em&gt;DevOps&lt;/em&gt;.&lt;/p&gt;
        &lt;h2 id=&quot;gli-strumenti&quot;&gt;Gli strumenti&lt;/h2&gt;
        &lt;p&gt;Da smanettone sono sempre stato attratto in maniera particolare dagli strumenti, e il mio personale approccio è di non cominciare mai qualcosa senza prima aver acquisito almeno gli strumenti di base.&lt;br /&gt;
        &lt;em&gt;DevOps&lt;/em&gt; in questo è dalla mia parte partendo molto spesso proprio da questi.&lt;/p&gt;
        &lt;p&gt;Di strumenti ce ne sono veramente un’infinità, tutti ottimi e perfezionati nel tempo. Proprio per questo motivo vorrei porre l’attenzione più che su uno strumento o un brand in particolare, su determinate categorie di strumenti per me fondamentali e che definiscono il mio modo ideale di lavorare.&lt;/p&gt;
        &lt;h3 id=&quot;i-test&quot;&gt;I test&lt;/h3&gt;
        &lt;p&gt;A prescindere dal linguaggio, dalla piattaforma, dalle librerie e dai sistemi utilizzati, i test per me e per questa metodologia sono fondamentali (e fondamentalmente ignorati dai più).&lt;/p&gt;
        &lt;p&gt;Sui test si basa tutto il mondo della &lt;em&gt;Continuous Integration&lt;/em&gt; e su questo, a catena, si basa la &lt;em&gt;Continuous Deployment&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Questo la dovrebbe dire lunga su quanto siano importanti i test.&lt;/p&gt;
        &lt;p&gt;Parlo genericamente di test e non di un tipo particolare di test perché tutti equamente sono importanti.&lt;/p&gt;
        &lt;p&gt;I &lt;strong&gt;test di unità&lt;/strong&gt;, i più famosi, sono estremamente importanti perché consentono di acquisire sicurezza sulla corretta implementazione dei casi d’uso del software, permettendo in realtà anche un &lt;em&gt;refactoring&lt;/em&gt; sicuro del codice nel momento in cui ce ne sia bisogno.&lt;/p&gt;
        &lt;p&gt;Scrivere ed eseguire dei test di unità consente di essere sicuri che l’unità di codice sottoposta a test sia fondamentalmente esente da difetti per quello specifico insieme di casi d’uso, non male se si pensa di voler implementare dei test per ogni caso d’uso estratto dai requisiti.&lt;/p&gt;
        &lt;p&gt;Non meno importanti sono i &lt;strong&gt;test di integrazione&lt;/strong&gt;, che permettono di sottoporre a test non più singole unità di codice ma interi moduli del sistema, per acquisire sicurezza sul corretto funzionamento di un modulo in interazione con il resto del sistema.&lt;/p&gt;
        &lt;p&gt;I test non verificano solo il corretto funzionamento dei moduli e la validità della logica applicativa: esistono anche tecniche per sottoporre a test pezzi importanti del software che non sono legati all’interazione tra moduli o alla logica applicativa; esistono altre tipologie di test che verificano diversi altri aspetti dei sistemi.&lt;/p&gt;
        &lt;p&gt;Il &lt;strong&gt;test della UI&lt;/strong&gt; verifica che l’interfaccia abbia un aspetto e un comportamento coerente, cosa necessaria considerando il ruolo fondamentale della stessa per l’utente. Non solo: effettuare i test sulle interfacce aiuta a ridurre il numero di difetti rilevati, che spesso riguardano proprio quest’ultima piuttosto che elementi di logica applicativa.&lt;/p&gt;
        &lt;p&gt;In ultimo, ma di certo non per importanza, i &lt;strong&gt;test di sicurezza&lt;/strong&gt;, o &lt;em&gt;vulnerability assessment&lt;/em&gt;, che verificano che l’applicazione sia esente da difetti che ne compromettano la sicurezza, in termini di protezione dei dati, accesso non autorizzato e operazioni pericolose sul sistema o altri sistemi a esso collegati.&lt;/p&gt;
        &lt;p&gt;Ognuno di questi test può essere scritto come codice e ne può essere automatizzata l’esecuzione tramite uno strumento di &lt;em&gt;Continuous integration&lt;/em&gt; che, come dice il nome, integra in continuazione il codice prodotto allertando nel momento in cui uno o più di questi test fallisca.&lt;/p&gt;
        &lt;p&gt;Per chi sviluppa avere a disposizione una buona suite di test e un sistema attivo di &lt;em&gt;continuous integration&lt;/em&gt; significa avere la sicurezza che il codice prodotto in ogni momento è esente (o quasi) da difetti.&lt;br /&gt;
        Questo di fatto diminuisce tantissimo la frizione che verrebbe altrimenti prodotta dalla notifica di difetti durante la scrittura di una nuova funzione del software.&lt;/p&gt;
        &lt;h3 id=&quot;cicd&quot;&gt;CI/CD&lt;/h3&gt;
        &lt;p&gt;Molto &lt;em&gt;markettaro&lt;/em&gt; vero? Beh, questa è la sigla che troverete cercando sistemi o servizi che forniscano funzionalità di &lt;em&gt;Continuous Integration&lt;/em&gt; e &lt;em&gt;Continuous Deployment&lt;/em&gt; (quest’ultimo a volte viene impropriamente chiamato &lt;em&gt;Continuous Delivery&lt;/em&gt;).&lt;/p&gt;
        &lt;p&gt;Entrando in ottica di &lt;em&gt;DevOps&lt;/em&gt; si capisce come il più possibile della catena di produzione di software debba essere automatizzata.&lt;/p&gt;
        &lt;p&gt;L’automazione, per come si è evoluto il mercato finora, riguarda la correlazione stretta tra i sistemi che permettono di gestire le revisioni del codice e i sistemi che questo codice lo prendono e lo testano, lo impacchettano e lo installano negli ambienti di collaudo (anche chiamato &lt;em&gt;quality assurance&lt;/em&gt; o &lt;strong&gt;QA&lt;/strong&gt;) e produzione o esercizio.&lt;/p&gt;
        &lt;p&gt;Dopo che uno sviluppatore ha scritto (e si spera anche testato) il codice relativo a una correzione o a una nuova funzionalità, questo viene inviato al sistema di revisione che lo archivia.&lt;br /&gt;
        Automaticamente il sistema di integrazione continua, legato al sistema di gestione delle revisioni, scarica l’ultima revisione ed esegue tutti i test disponibili.&lt;br /&gt;
        Se i test vanno a buon fine, vine prodotto un pacchetto a partire dai moduli che sono stati sottoposti a test che viene passato al sistema di pubblicazione continua, che installa la nuova versione dei moduli nei vari ambienti.&lt;/p&gt;
        &lt;p&gt;Più queste procedure sono automatiche, meno tempo sarà necessario per vedere le ultime modifiche in ambiente di esercizio, e l’obiettivo sembra essere proprio questo.&lt;br /&gt;
        Per me lo è.&lt;/p&gt;
        &lt;h2 id=&quot;la-situazione-da-noi&quot;&gt;La situazione da noi&lt;/h2&gt;
        &lt;p&gt;Il mondo sta cambiando e sembra che Roma, anche se come ruota di scorta, stia cambiando insieme al mondo.&lt;/p&gt;
        &lt;p&gt;Pochi anni fa non si parlava molto di &lt;em&gt;DevOps&lt;/em&gt; ma neanche di &lt;em&gt;Agile&lt;/em&gt;, sintomo di una gestione pressappochista dei progetti da parte di clienti, aziende, manager.&lt;/p&gt;
        &lt;p&gt;Da qualche anno a questa parte invece non si fa altro che parlarne, iniziano a uscire dalle tane persone che dicono di avere decine di anni di esperienza con questa metodologia e in un attimo il mondo sembra un posto migliore per chi sviluppa software.&lt;/p&gt;
        &lt;p&gt;Ma non è tutto oro quello che luccica, purtroppo.&lt;/p&gt;
        &lt;h3 id=&quot;racconto-la-mia-esperienza&quot;&gt;Racconto la mia esperienza&lt;/h3&gt;
        &lt;p&gt;Lavoravo per una grossa società come consulente, al fianco di un’altra enorme e rinomata società nella produzione di questo software; il nostro cliente comune era un importante gruppo italiano, che ci commissionò un software piuttosto importante per l’azienda cliente.&lt;/p&gt;
        &lt;p&gt;Purtroppo non sono stato coinvolto nelle primissime decisioni del progetto, quelle fondamentali.&lt;/p&gt;
        &lt;p&gt;Il progetto parte in pompa magna con la promessa che &lt;em&gt;«sta volta facciamo le cose per bene, non come l’altra volta»&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Nell’offerta che ha poi vinto la gara d’appalto c’era la &lt;strong&gt;garanzia&lt;/strong&gt; che sarebbe stata usata la metodologia &lt;strong&gt;&lt;em&gt;Agile&lt;/em&gt;&lt;/strong&gt; per la gestione di tutto il progetto, che sarebbero stati usati tutti gli &lt;strong&gt;ultimissimi strumenti di automatizzazione&lt;/strong&gt; del processo di produzione, e che sarebbero dovuti essere scritti addirittura i &lt;strong&gt;test di unità, di integrazione, di interfaccia&lt;/strong&gt; e una suite specifica di test per la &lt;strong&gt;&lt;em&gt;quality assurance&lt;/em&gt;&lt;/strong&gt;, l’assicurazione che il codice stesso rispetti determinati standard di qualità.&lt;/p&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Purtroppo, questo è servito solo per alzare il valore dell’offerta commerciale e nulla di tutto questo è stato fatto.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Non di meno, sono comunque riuscito a implementare alcuni punti che mi premevano particolarmente, come una buona &lt;em&gt;continuous integration&lt;/em&gt; e alcuni test su dei file di configurazione critici per il sistema.&lt;/p&gt;
        &lt;h3 id=&quot;morale&quot;&gt;Morale&lt;/h3&gt;
        &lt;blockquote&gt;
        &lt;p&gt;Purtroppo sembra troppo bello per essere vero, e nella maggior parte dei casi lo è.&lt;/p&gt;
        &lt;/blockquote&gt;
        &lt;p&gt;Non smentisco che esistano delle situazioni virtuose in cui questo viene fatto qui a Roma, né tanto meno voglio negare l’interesse del mercato e soprattutto dei clienti verso questo approccio più formale alla produzione di software che risolve tutti questi problemi.&lt;/p&gt;
        &lt;p&gt;Però, ovvio che c’era un però, qui ancora se ne parla troppo poco e si sfrutta veramente troppo poco il ritorno commerciale che si è venuto a creare intorno a tutta la metodologia e agli strumenti di automatizzazione.&lt;/p&gt;
        &lt;p&gt;Da tecnico parlando ai tecnici, mi sento sempre di spingere il più possibile l’utilizzo di queste tecniche, buone pratiche e metodologie per facilitare a noi la produzione del software e al cliente l’adozione di software nuovo e &lt;strong&gt;veramente&lt;/strong&gt; funzionante, se possibile senza difetti.&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Oggi parlo di DevOps, argomento a me caro, chi mi conosce di persona sa quanto posso essere un serial killer di cabbasisi su questo argomento. Introduco brevemente l’argomento dicendo che si tratta di una metodologia di organizzazione del lavoro strettamente legata all’informatica e che si presta molto bene per determinati gruppi di lavoro, determinati progetti e determinate aziende.</summary></entry><entry><title type="html">Na na na na na na na na na na na na na na na na, PassMan!</title><link href="https://klez.me/2019/04/19/na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-passman/" rel="alternate" type="text/html" title="Na na na na na na na na na na na na na na na na, PassMan!" /><published>2019-04-19T20:11:14+02:00</published><updated>2019-04-19T20:11:14+02:00</updated><id>https://klez.me/2019/04/19/na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-passman</id><content type="html" xml:base="https://klez.me/2019/04/19/na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-na-passman/">&lt;p&gt;Oggi che è venerdì voglio raccontare una storia divertente che mi riguarda direttamente, prendetela leggera.&lt;/p&gt;
        &lt;p&gt;Parliamo di &lt;a href=&quot;https://klez.me/PassMan&quot;&gt;Passman&lt;/a&gt;, un piccolo progetto “&lt;em&gt;esperimento&lt;/em&gt;” che ho condotto circa 5 anni fa, e devo dire che è stato divertente e interessante.&lt;/p&gt;
        &lt;!--more--&gt;
        &lt;p class=&quot;m-0 invisible zero-size&quot;&gt;
        &lt;a class=&quot;invisible&quot; id=&quot;read-more&quot;&gt;read more&lt;/a&gt;
        &lt;/p&gt;
        &lt;h2 id=&quot;preludio&quot;&gt;Preludio&lt;/h2&gt;
        &lt;p&gt;L’idea nasce da un’esigenza, quella di ricordare un certo numero abbastanza cospicuo di password relativamente complesse.&lt;/p&gt;
        &lt;p&gt;Inizio a cercare su internet delle soluzioni a quello che secondo me era un problema assolutamente comune per una buona pratica di utilizzo della tecnologia. Ho sempre avuto una password diversa per ogni account creato, del resto mi è sempre sembrato &lt;em&gt;normale&lt;/em&gt; farlo, e le password erano non molto complesse ma semplici da ricordare, un compromesso tra robustezza e memorizzazione, diciamo.&lt;/p&gt;
        &lt;p&gt;Inspiegabilmente per me, in giro c’è veramente poco di valido e utile (solo qualche tempo dopo avrei trovato &lt;a href=&quot;http://www.zx2c4.com/projects/password-store/&quot;&gt;Unix Pass&lt;/a&gt;) e io avevo alcuni vincoli non di poco conto.&lt;/p&gt;
        &lt;p&gt;Non volevo utilizzare strumenti &lt;em&gt;closed source&lt;/em&gt;, non volevo strumenti che fossero &lt;em&gt;principalmente&lt;/em&gt; desktop o &lt;em&gt;principalmente&lt;/em&gt; web o &lt;em&gt;principalmente&lt;/em&gt; estensioni del browser, &lt;strong&gt;volevo una soluzione &lt;em&gt;passepartout&lt;/em&gt;&lt;/strong&gt;. Volevo una soluzione che fosse in grado di &lt;strong&gt;sincronizzare&lt;/strong&gt; &lt;em&gt;dove volevo io&lt;/em&gt;, non in un fantomatico “&lt;em&gt;cloud&lt;/em&gt;” da qualche parte gestito chissà come da chissà chi.&lt;/p&gt;
        &lt;p&gt;Insomma volevo appoggiarmi il meno possibile a terzi e al &lt;em&gt;closed source/closed service&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Inoltre, parametro che filtrava molto pesantemente la scelta, doveva funzionare sul maggior numero di casi d’uso possibili, intesi come il dover funzionare principalmente su linux e browser, possibilmente su shell (non indispensabile) e opzionalmente su altre piattaforme oltre a queste (windows).&lt;/p&gt;
        &lt;p&gt;Il meglio del mercato erano strumenti come LastPass o KeePass, non entro nel dettaglio perché li ritengo poco utili e poco versatili.&lt;/p&gt;
        &lt;p&gt;La morale di questa ricerca è stata (dopo un’intera giornata praticamente, divisa in piccole ricerche durante la settimana) che non c’era nulla di veramente valido in circolazione.&lt;/p&gt;
        &lt;p&gt;&lt;strong&gt;Così ho avuto l’illuminazione.&lt;/strong&gt;&lt;/p&gt;
        &lt;h2 id=&quot;la-nascita-di-passman&quot;&gt;La nascita di PassMan&lt;/h2&gt;
        &lt;p&gt;Di buon impegno decido che devo scrivermelo io il software, perché quello che c’è in giro non è abbastanza valido.&lt;/p&gt;
        &lt;p&gt;Ormai deciso a fare questa cosa, torno a casa dall’ufficio e, dopo cena, mi metto al pc a iniziare questa cosa.&lt;/p&gt;
        &lt;p&gt;La piccola progettazione alla base ha voluto che il software avrebbe dovuto essere &lt;strong&gt;web&lt;/strong&gt; e in particolare &lt;strong&gt;client&lt;/strong&gt;, proprio perché non avevo alcuna intenzione di creare un mostro da dover poi installare da qualche parte. Volevo una cosa leggera, veloce, pratica, e che potesse coprire più piattaforme possibili, il web mi è sembrato la soluzione migliore.&lt;/p&gt;
        &lt;p&gt;La scelta delle librerie è stata relativamente semplice, ne uso così poche!&lt;/p&gt;
        &lt;p&gt;L’elenco è breve:&lt;/p&gt;
        &lt;ul&gt;
        &lt;li&gt;JQuery&lt;/li&gt;
        &lt;li&gt;Bootstrap&lt;/li&gt;
        &lt;li&gt;FontAwesome&lt;/li&gt;
        &lt;li&gt;KnockoutJS&lt;/li&gt;
        &lt;li&gt;OpenPGP.js&lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Bootstrap e FontAwesome si commentano da sole: due librerie per evitarmi di scrivere la grafica e cercare immagini in giro per internet. Sono stati un enorme &lt;em&gt;boost&lt;/em&gt; di produttività, lo ammetto.&lt;/p&gt;
        &lt;p&gt;JQuery era la scelta ovvia da fare per avere una serie di funzionalità che col JavaScript del 2014 avrei solo sognato. Anche qui il &lt;em&gt;boost&lt;/em&gt; è stato enorme e mi ha permesso di fare veramente tanto in poco tempo.&lt;/p&gt;
        &lt;p&gt;Knockout è un &lt;em&gt;framework&lt;/em&gt; molto interessante, che implementa un pattern che in questo particolare progetto è stato un notevole aiuto allo sviluppo e alla progettazione: sto parlando di &lt;strong&gt;MVVM&lt;/strong&gt;.&lt;/p&gt;
        &lt;p&gt;Senza entrare troppo nel dettaglio, quello che &lt;a href=&quot;https://en.wikipedia.org/wiki/Model–view–viewmodel&quot;&gt;MVVM&lt;/a&gt; abilita è la capacità di aggiornare l’interfaccia osservando i dati che questa deve esporre, e lo fa con un pattern che si chiama &lt;em&gt;Observer&lt;/em&gt; e una tecnica chiamata &lt;em&gt;data binding&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;Osservando i dati, l’interfaccia reagisce renderizzando nuovamente la porzione di essa che è impattata dalla modifica. Questo ha aumentato notevolmente la mia produttività non avendo la necessità di gestire i cambiamenti nell’interfaccia.&lt;/p&gt;
        &lt;p&gt;L’ultima libreria si commenta quasi da sola. OpenPGP.js &lt;strong&gt;ovviamente&lt;/strong&gt; è stata utilizzata per garantire una certa sicurezza visto che il dato trattato è una password, &lt;em&gt;informazione estremamente sensibile&lt;/em&gt;.&lt;/p&gt;
        &lt;p&gt;PassMan è uno di quegli strumenti che fa una cosa sola e la fa fatta bene insomma, e sta dentro a circa 30 KB (grazie alle librerie che non rientrano nel conto).&lt;/p&gt;
        &lt;p&gt;Non vi tolgo il dubbio del suo funzionamento, lascio a voi la curiosità di andare a verificare come funziona e se funziona bene.&lt;/p&gt;
        &lt;h2 id=&quot;la-sicurezza&quot;&gt;La sicurezza&lt;/h2&gt;
        &lt;p&gt;Essendo un applicativo che gira interamente nel browser, non c’è pericolo di vedere le proprie password viaggiare in rete. L’unica cosa che viaggia è l’applicativo stesso, ma comunque la comunicazione è cifrata grazie a GitHub che fornisce le &lt;em&gt;Pages&lt;/em&gt; e l’accesso in https a queste.&lt;/p&gt;
        &lt;p&gt;Le password risiedono in memoria, e vengono lette da un file cifrato PGP e “scritte” in un altro file sempre cifrato con PGP.&lt;br /&gt;
        Le chiavi di cifratura vengono inserite come primo passo nelle impostazioni, e vengono sempre gestite in memoria, anche qui non c’è comunicazione di rete.&lt;/p&gt;
        &lt;p&gt;Tutto sommato, per quanto poco ci è voluto a scriverla, è sommariamente “abbastanza” sicura, e il file che viene letto e scritto in memoria, viene sempre gestito lato browser, e alla chiusura dell’applicazione ogni informazione inserita non scaricata nel nuovo file di password, viene perduta.&lt;/p&gt;
        &lt;h2 id=&quot;conclusioni&quot;&gt;Conclusioni&lt;/h2&gt;
        &lt;p&gt;La cosa più divertente da sapere di questa storia è che PassMan è stato scritto interamente in una sola notte, &lt;strong&gt;dalle 8 di sera alle 8 di mattina&lt;/strong&gt;, del 22 luglio 2014. Praticamente 12 ore di lavoro hanno portato a questo splendido risultato.&lt;/p&gt;
        &lt;p&gt;Dopo alcuni ricicli, fisiologici per qualsiasi software, nell’arco effettivo di 10 giorni e lavorando al progetto in ogni minuto libero (pochi, effettivamente), ho completato il progetto. Credo che lo sforzo totale sia stato di circa mezz’ora al giorno per i successivi 8 giorni, per un totale effettivo di circa tre giornate &lt;em&gt;lavorative&lt;/em&gt; o 24 ore.&lt;/p&gt;
        &lt;p&gt;Quando ho completato il progetto l’ho usato per qualche tempo, devo dire con parecchia soddisfazione personale. Poi ho scoperto &lt;a href=&quot;http://www.zx2c4.com/projects/password-store/&quot;&gt;Unix Pass&lt;/a&gt;. E il mio piccolo progetto è caduto in disuso, visto che l’unico essere umano sulla terra che lo usava smise di farlo.&lt;/p&gt;
        &lt;p&gt;Ma è stato comunque un divertentissimo esperimento, che mi ha permesso di imparare molto, soprattutto le potenzialità delle applicazioni che vengono eseguite interamente nel browser (alla fine ho utilizzato OpenPGP dentro a un browser).&lt;/p&gt;</content><author><name>kLeZ</name></author><summary type="html">Oggi che è venerdì voglio raccontare una storia divertente che mi riguarda direttamente, prendetela leggera. Parliamo di Passman, un piccolo progetto “esperimento” che ho condotto circa 5 anni fa, e devo dire che è stato divertente e interessante.</summary></entry></feed>